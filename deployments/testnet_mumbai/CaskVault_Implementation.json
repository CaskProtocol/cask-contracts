{
  "address": "0x86da44B97bA388Dd827632661ff5B08Bba130033",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "AllowedAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAssetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "AssetDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAssetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "AssetWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "DisallowedAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAssetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolFeeShares",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "network",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "networkFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "networkFeeShares",
          "type": "uint256"
        }
      ],
      "name": "Payment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAssetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "TransferValue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_protocol",
          "type": "address"
        }
      ],
      "name": "addProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_depositLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_slippageBps",
          "type": "uint256"
        }
      ],
      "name": "allowAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fromAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fromAmount",
          "type": "uint256"
        }
      ],
      "name": "convertPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "currentValueOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_assetAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_assetAmount",
          "type": "uint256"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "disallowAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeDistributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAssets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getAsset",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippageBps",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "assetDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "priceFeedDecimals",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            }
          ],
          "internalType": "struct ICaskVault.Asset",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_baseAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_baseAssetPriceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeDistributor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pricePerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_network",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_networkFee",
          "type": "uint256"
        }
      ],
      "name": "protocolPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "protocolPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        }
      ],
      "name": "protocolPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "protocols",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_protocol",
          "type": "address"
        }
      ],
      "name": "removeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserved1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDistributor",
          "type": "address"
        }
      ],
      "name": "setFeeDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minDeposit",
          "type": "uint256"
        }
      ],
      "name": "setMinDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_forwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "sharesForValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "supportsAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "totalAssetBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferValue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferValueFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbb794b11d3b326acf0f7e517aa62093dca7905e074e44a2b26c09359aa24b0cb",
  "receipt": {
    "to": null,
    "from": "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0",
    "contractAddress": "0x86da44B97bA388Dd827632661ff5B08Bba130033",
    "transactionIndex": 98,
    "gasUsed": "3550981",
    "logsBloom": "0x
    "blockHash": "0xc143745b37c72cc823e5f354c4c7a606fc3b56c355c6c3f5705613b0b8457ffa",
    "transactionHash": "0xbb794b11d3b326acf0f7e517aa62093dca7905e074e44a2b26c09359aa24b0cb",
    "logs": [
      {
        "transactionIndex": 98,
        "blockNumber": 26277122,
        "transactionHash": "0xbb794b11d3b326acf0f7e517aa62093dca7905e074e44a2b26c09359aa24b0cb",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000083e50cd4123baa60f6d6c8a83ca85ac72e826bd0",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x000000000000000000000000000000000000000000000000006b3b961fbc10d80000000000000000000000000000000000000000000000000cb286ef852a7d970000000000000000000000000000000000000000000000e0a734f0b9c83172670000000000000000000000000000000000000000000000000c474b59656e6cbf0000000000000000000000000000000000000000000000e0a7a02c4fe7ed833f",
        "logIndex": 203,
        "blockHash": "0xc143745b37c72cc823e5f354c4c7a606fc3b56c355c6c3f5705613b0b8457ffa"
      }
    ],
    "blockNumber": 26277122,
    "cumulativeGasUsed": "19513604",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "d6c25efcbf0cae4d4b0f900f06de951e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"AllowedAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAssetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"AssetDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAssetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"AssetWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"DisallowedAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAssetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFeeShares\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"network\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"networkFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"networkFeeShares\",\"type\":\"uint256\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAssetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"name\":\"addProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slippageBps\",\"type\":\"uint256\"}],\"name\":\"allowAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fromAmount\",\"type\":\"uint256\"}],\"name\":\"convertPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"currentValueOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_assetAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_assetAmount\",\"type\":\"uint256\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"disallowAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"assetDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"priceFeedDecimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"internalType\":\"struct ICaskVault.Asset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_baseAssetPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeDistributor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_network\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_networkFee\",\"type\":\"uint256\"}],\"name\":\"protocolPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"protocolPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"name\":\"protocolPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"protocols\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"name\":\"removeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserved1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDistributor\",\"type\":\"address\"}],\"name\":\"setFeeDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minDeposit\",\"type\":\"uint256\"}],\"name\":\"setMinDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sharesForValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"supportsAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"totalAssetBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferValueFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowAsset(address,address,uint256,uint256)\":{\"details\":\"Add an allowed asset to be deposited into the vault\",\"params\":{\"_asset\":\"Address of new ERC20 asset\",\"_priceFeed\":\"Address of a chainlink-compatible price oracle for the asset\",\"_slippageBps\":\"Slippage basis points to use when depositing/withdrawing this asset\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"currentValueOf(address)\":{\"details\":\"Get current vault value of `_address` denominated in `baseAsset`\",\"params\":{\"_address\":\"Address to check\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(address,uint256)\":{\"details\":\"Deposit an amount of `_asset` into the vault and credit the equal value of `baseAsset`\",\"params\":{\"_asset\":\"Address of incoming asset\",\"_assetAmount\":\"Amount of asset to deposit\"}},\"depositTo(address,address,uint256)\":{\"details\":\"Deposit an amount of `_asset` into the vault and credit the equal value of `baseAsset`\",\"params\":{\"_asset\":\"Address of incoming asset\",\"_assetAmount\":\"Amount of asset to deposit\",\"_to\":\"Recipient of funds\"}},\"disallowAsset(address)\":{\"details\":\"Mark an already allowed asset to no longer be allowed for deposits/withdraws\",\"params\":{\"_asset\":\"Address of new ERC20 asset\"}},\"getAllAssets()\":{\"details\":\"Get all the assets supported by the vault.\"},\"getAsset(address)\":{\"details\":\"Get asset details\",\"params\":{\"_asset\":\"Asset address\"},\"returns\":{\"_0\":\"Asset Asset details\"}},\"getBaseAsset()\":{\"details\":\"Get base asset of vault.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pricePerShare()\":{\"details\":\"Get current vault value a vault share\"},\"protocolPayment(address,address,uint256)\":{\"details\":\"Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\",\"params\":{\"_from\":\"From address\",\"_to\":\"To address\",\"_value\":\"Amount of baseAsset value to transfer\"}},\"protocolPayment(address,address,uint256,uint256)\":{\"details\":\"Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\",\"params\":{\"_from\":\"From address\",\"_protocolFee\":\"Protocol fee to deduct from `_value`\",\"_to\":\"To address\",\"_value\":\"Amount of baseAsset value to transfer\"}},\"protocolPayment(address,address,uint256,uint256,address,uint256)\":{\"details\":\"Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\",\"params\":{\"_from\":\"From address\",\"_network\":\"Address of network fee collector\",\"_networkFee\":\"Network fee to deduct from `_value`\",\"_protocolFee\":\"Protocol fee to deduct from `_value`\",\"_to\":\"To address\",\"_value\":\"Amount of baseAsset value to transfer\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"sharesForValue(uint256)\":{\"details\":\"Get the number of vault shares that represents a given value of the base asset\",\"params\":{\"_value\":\"Amount of value\"}},\"supportsAsset(address)\":{\"details\":\"Check if the vault supports an asset\",\"params\":{\"_asset\":\"Asset address\"},\"returns\":{\"_0\":\"bool `true` if asset supported, `false` otherwise\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssetBalance(address)\":{\"details\":\"Get total amount of an asset held in vault and managed by admin\",\"params\":{\"_asset\":\"Address of asset\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalValue()\":{\"details\":\"Get total value in vault and managed by admin - denominated in `baseAsset`\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferValue(address,uint256)\":{\"details\":\"Transfer the equivalent vault shares of base asset `value` to `_recipient`\",\"params\":{\"_recipient\":\"To address\",\"_value\":\"Amount of baseAsset value to transfer\"}},\"transferValueFrom(address,address,uint256)\":{\"details\":\"Transfer the equivalent vault shares of base asset `value` from `_sender` to `_recipient`\",\"params\":{\"_recipient\":\"To address\",\"_sender\":\"From address\",\"_value\":\"Amount of baseAsset value to transfer\"}},\"withdraw(address,uint256)\":{\"details\":\"Withdraw an amount of shares from the vault in the form of `_asset`\",\"params\":{\"_asset\":\"Address of outgoing asset\",\"_shares\":\"Amount of shares to withdraw\"}},\"withdrawTo(address,address,uint256)\":{\"details\":\"Withdraw an amount of shares from the vault in the form of `_asset`\",\"params\":{\"_asset\":\"Address of outgoing asset\",\"_recipient\":\"Recipient who will receive the withdrawn assets\",\"_shares\":\"Amount of shares to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/CaskVault.sol\":\"CaskVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@opengsn/contracts/src/BaseRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable no-inline-assembly\\npragma solidity >=0.6.9;\\n\\nimport \\\"./interfaces/IRelayRecipient.sol\\\";\\n\\n/**\\n * A base contract to be inherited by any contract that want to receive relayed transactions\\n * A subclass must use \\\"_msgSender()\\\" instead of \\\"msg.sender\\\"\\n */\\nabstract contract BaseRelayRecipient is IRelayRecipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address private _trustedForwarder;\\n\\n    function trustedForwarder() public virtual view returns (address){\\n        return _trustedForwarder;\\n    }\\n\\n    function _setTrustedForwarder(address _forwarder) internal {\\n        _trustedForwarder = _forwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, return the original sender.\\n     * otherwise, return `msg.sender`.\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            ret = msg.sender;\\n        }\\n    }\\n\\n    /**\\n     * return the msg.data of this call.\\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\\n     * of the msg.data - so this method will strip those 20 bytes off.\\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\\n     * should be used in the contract instead of msg.data, where this difference matters.\\n     */\\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            return msg.data[0:msg.data.length-20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xce3168b37fc87ec34a18b56b4b16a06432119c07fd2e1d864b871dcf40372ebe\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * a contract must implement this interface in order to support relayed transaction.\\n * It is better to inherit the BaseRelayRecipient as its implementation.\\n */\\nabstract contract IRelayRecipient {\\n\\n    /**\\n     * return if the forwarder is trusted to forward relayed transactions to us.\\n     * the forwarder is required to verify the sender's signature, and verify\\n     * the call is not a replay.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\\n     * of the msg.data.\\n     * otherwise, return `msg.sender`\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * return the msg.data of this call.\\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\\n     * of the msg.data - so this method will strip those 20 bytes off.\\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\\n     * should be used in the contract instead of msg.data, where this difference matters.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n\\n    function versionRecipient() external virtual view returns (string memory);\\n}\\n\",\"keccak256\":\"0x199e82e0a2833a97213b5c16ac9b4e2b1814f2e90a4c4916855cbc21e710ad5f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9ffedb33e192f8821cbaead72596c79ea87fb28a73f8d3a9f5004449799f8e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf93da311a3b34a8363a759c404d575746fa38351fb29ecd646c608e27219ebec\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf3a9b766b0d0456f79d9402db4b49bb16c414f3f9d65244475c0704b6c66dcf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __Context_init_unchained();\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0x23a373902059fb51db98e32e13f89a0ef0c570039081a1345022e66bc7e315d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5ca0eb1120133a6d0799752532d4638048391823a2b623c4fe9ff46e262266fb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/interfaces/ICaskVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\\\";\\n\\n/**\\n * @title  Interface for vault\\n  */\\n\\ninterface ICaskVault is IERC20MetadataUpgradeable {\\n\\n    // whitelisted stablecoin assets supported by the vault\\n    struct Asset {\\n        address priceFeed;\\n        uint256 slippageBps;\\n        uint256 depositLimit;\\n        uint8 assetDecimals;\\n        uint8 priceFeedDecimals;\\n        bool allowed;\\n    }\\n\\n\\n    /**\\n      * @dev Get base asset of vault.\\n     */\\n    function getBaseAsset() external view returns (address);\\n\\n    /**\\n      * @dev Get all the assets supported by the vault.\\n     */\\n    function getAllAssets() external view returns (address[] memory);\\n\\n    /**\\n     * @dev Get asset details\\n     * @param _asset Asset address\\n     * @return Asset Asset details\\n     */\\n    function getAsset(address _asset) external view returns(Asset memory);\\n\\n    /**\\n     * @dev Check if the vault supports an asset\\n     * @param _asset Asset address\\n     * @return bool `true` if asset supported, `false` otherwise\\n     */\\n    function supportsAsset(address _asset) external view returns (bool);\\n\\n    /**\\n     * @dev Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\\n     * @param _from From address\\n     * @param _to To address\\n     * @param _value Amount of baseAsset value to transfer\\n     * @param _protocolFee Protocol fee to deduct from `_value`\\n     * @param _network Address of network fee collector\\n     * @param _networkFee Network fee to deduct from `_value`\\n     */\\n    function protocolPayment(\\n        address _from,\\n        address _to,\\n        uint256 _value,\\n        uint256 _protocolFee,\\n        address _network,\\n        uint256 _networkFee\\n    ) external;\\n\\n    /**\\n     * @dev Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\\n     * @param _from From address\\n     * @param _to To address\\n     * @param _value Amount of baseAsset value to transfer\\n     * @param _protocolFee Protocol fee to deduct from `_value`\\n     */\\n    function protocolPayment(\\n        address _from,\\n        address _to,\\n        uint256 _value,\\n        uint256 _protocolFee\\n    ) external;\\n\\n    /**\\n     * @dev Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\\n     * @param _from From address\\n     * @param _to To address\\n     * @param _value Amount of baseAsset value to transfer\\n     */\\n    function protocolPayment(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external;\\n\\n    /**\\n     * @dev Transfer the equivalent vault shares of base asset `value` to `_recipient`\\n     * @param _recipient To address\\n     * @param _value Amount of baseAsset value to transfer\\n     */\\n    function transferValue(\\n        address _recipient,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Transfer the equivalent vault shares of base asset `value` from `_sender` to `_recipient`\\n     * @param _sender From address\\n     * @param _recipient To address\\n     * @param _value Amount of baseAsset value to transfer\\n     */\\n    function transferValueFrom(\\n        address _sender,\\n        address _recipient,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Deposit `_assetAmount` of `_asset` into the vault and credit the equivalent value of `baseAsset`\\n     * @param _asset Address of incoming asset\\n     * @param _assetAmount Amount of asset to deposit\\n     */\\n    function deposit(address _asset, uint256 _assetAmount) external;\\n\\n    /**\\n     * @dev Deposit `_assetAmount` of `_asset` into the vault and credit the equivalent value of `baseAsset`\\n     * @param _to Recipient of funds\\n     * @param _asset Address of incoming asset\\n     * @param _assetAmount Amount of asset to deposit\\n     */\\n    function depositTo(address _to, address _asset, uint256 _assetAmount) external;\\n\\n    /**\\n     * @dev Withdraw an amount of shares from the vault in the form of `_asset`\\n     * @param _asset Address of outgoing asset\\n     * @param _shares Amount of shares to withdraw\\n     */\\n    function withdraw(address _asset, uint256 _shares) external;\\n\\n    /**\\n     * @dev Withdraw an amount of shares from the vault in the form of `_asset`\\n     * @param _recipient Recipient who will receive the withdrawn assets\\n     * @param _asset Address of outgoing asset\\n     * @param _shares Amount of shares to withdraw\\n     */\\n    function withdrawTo(address _recipient, address _asset, uint256 _shares) external;\\n\\n    /**\\n     * @dev Get total shares of vault\\n     */\\n//    function totalSupply() external view returns(uint256);\\n\\n    /**\\n     * @dev Get current balance of shares for an address\\n     * @param _address Address to check\\n     */\\n//    function balanceOf(address _address) external view returns(uint256);\\n\\n    /**\\n     * @dev Get current vault value of `_address` denominated in `baseAsset`\\n     * @param _address Address to check\\n     */\\n    function currentValueOf(address _address) external view returns(uint256);\\n\\n    /**\\n     * @dev Get current vault value a vault share\\n     */\\n    function pricePerShare() external view returns(uint256);\\n\\n    /**\\n     * @dev Get the number of vault shares that represents a given value of the base asset\\n     * @param _value Amount of value\\n     */\\n    function sharesForValue(uint256 _value) external view returns(uint256);\\n\\n    /**\\n     * @dev Get total value in vault and managed by admin - denominated in `baseAsset`\\n     */\\n    function totalValue() external view returns(uint256);\\n\\n    /**\\n     * @dev Get total amount of an asset held in vault and managed by admin\\n     * @param _asset Address of asset\\n     */\\n    function totalAssetBalance(address _asset) external view returns(uint256);\\n\\n\\n    /************************** EVENTS **************************/\\n\\n    /** @dev Emitted when `sender` transfers `baseAssetValue` (denominated in vault baseAsset) to `recipient` */\\n    event TransferValue(address indexed from, address indexed to, uint256 baseAssetAmount, uint256 shares);\\n\\n    /** @dev Emitted when an amount of `baseAsset` is paid from `from` to `to` within the vault */\\n    event Payment(address indexed from, address indexed to, uint256 baseAssetAmount, uint256 shares,\\n        uint256 protocolFee, uint256 protocolFeeShares,\\n        address indexed network, uint256 networkFee, uint256 networkFeeShares);\\n\\n    /** @dev Emitted when `asset` is added as a new supported asset */\\n    event AllowedAsset(address indexed asset);\\n\\n    /** @dev Emitted when `asset` is disallowed t */\\n    event DisallowedAsset(address indexed asset);\\n\\n    /** @dev Emitted when `participant` deposits `asset` */\\n    event AssetDeposited(address indexed participant, address indexed asset, uint256 assetAmount,\\n        uint256 baseAssetAmount, uint256 shares);\\n\\n    /** @dev Emitted when `participant` withdraws `asset` */\\n    event AssetWithdrawn(address indexed participant, address indexed asset, uint256 assetAmount,\\n        uint256 baseAssetAmount, uint256 shares);\\n\\n}\",\"keccak256\":\"0x9e6f0604e4adad4a6a8c5af8df9e52c4916f1e1a0fdc30104c79fcadafd0c913\",\"license\":\"MIT\"},\"contracts/vault/CaskVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nimport \\\"@opengsn/contracts/src/BaseRelayRecipient.sol\\\";\\n\\n\\nimport \\\"../interfaces/ICaskVault.sol\\\";\\n\\ncontract CaskVault is\\nICaskVault,\\nBaseRelayRecipient,\\nERC20Upgradeable,\\nOwnableUpgradeable,\\nPausableUpgradeable,\\nReentrancyGuardUpgradeable\\n{\\n    using SafeERC20 for IERC20;\\n\\n    modifier onlyProtocol {\\n        bool isProtocol = false;\\n        for (uint256 i = 0; i < protocols.length; i++) {\\n            if (_msgSender() == protocols[i]) {\\n                isProtocol = true;\\n                break;\\n            }\\n        }\\n        require(isProtocol, \\\"!AUTH\\\");\\n        _;\\n    }\\n\\n\\n    /************************** STATE **************************/\\n\\n    address public reserved1;\\n\\n    // base asset for vault - much is denominated in this\\n    address public baseAsset;\\n\\n    // address of contract that collects and distributes fees\\n    address public feeDistributor;\\n\\n    // assets supported by vault\\n    mapping(address => Asset) internal assets;\\n    address[] internal allAssets;\\n\\n    address[] public protocols;\\n\\n    // require deposit of at least this amount denominated in the baseAsset\\n    uint256 public minDeposit;\\n\\n    function initialize(\\n        address _baseAsset,\\n        address _baseAssetPriceFeed,\\n        address _feeDistributor\\n    ) public initializer {\\n        __Ownable_init();\\n        __Pausable_init();\\n        __ReentrancyGuard_init();\\n        __ERC20_init(\\\"Cask Vault Tokens\\\",\\\"MASH\\\");\\n\\n        require(IERC20Metadata(_baseAsset).decimals() > 0, \\\"!INVALID(baseAsset)\\\");\\n        require(AggregatorV3Interface(_baseAssetPriceFeed).decimals() > 0, \\\"!INVALID(baseAssetPriceFeed)\\\");\\n\\n        Asset storage asset = assets[_baseAsset];\\n        asset.priceFeed = _baseAssetPriceFeed;\\n        asset.assetDecimals = IERC20Metadata(_baseAsset).decimals();\\n        asset.priceFeedDecimals = AggregatorV3Interface(_baseAssetPriceFeed).decimals();\\n        asset.depositLimit = type(uint256).max;\\n        asset.slippageBps = 0;\\n        asset.allowed = true;\\n        allAssets.push(_baseAsset);\\n\\n        baseAsset = _baseAsset;\\n        feeDistributor = _feeDistributor;\\n        minDeposit = 0;\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() initializer {}\\n\\n    function decimals() public view override(ERC20Upgradeable, IERC20MetadataUpgradeable) returns (uint8) {\\n        return IERC20Metadata(baseAsset).decimals();\\n    }\\n\\n    function versionRecipient() public pure override returns(string memory) { return \\\"2.2.0\\\"; }\\n\\n    function _msgSender() internal view override(ContextUpgradeable, BaseRelayRecipient)\\n    returns (address sender) {\\n        sender = BaseRelayRecipient._msgSender();\\n    }\\n\\n    function _msgData() internal view override(ContextUpgradeable, BaseRelayRecipient)\\n    returns (bytes memory) {\\n        return BaseRelayRecipient._msgData();\\n    }\\n\\n\\n    /**\\n     * @dev Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\\n     * @param _from From address\\n     * @param _to To address\\n     * @param _value Amount of baseAsset value to transfer\\n     * @param _protocolFee Protocol fee to deduct from `_value`\\n     * @param _network Address of network fee collector\\n     * @param _networkFee Network fee to deduct from `_value`\\n     */\\n    function protocolPayment(\\n        address _from,\\n        address _to,\\n        uint256 _value,\\n        uint256 _protocolFee,\\n        address _network,\\n        uint256 _networkFee\\n    ) external override nonReentrant onlyProtocol whenNotPaused {\\n        _protocolPayment(_from, _to, _value, _protocolFee, _network, _networkFee);\\n    }\\n\\n    /**\\n     * @dev Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\\n     * @param _from From address\\n     * @param _to To address\\n     * @param _value Amount of baseAsset value to transfer\\n     * @param _protocolFee Protocol fee to deduct from `_value`\\n     */\\n    function protocolPayment(\\n        address _from,\\n        address _to,\\n        uint256 _value,\\n        uint256 _protocolFee\\n    ) external override nonReentrant onlyProtocol whenNotPaused {\\n        _protocolPayment(_from, _to, _value, _protocolFee, address(0), 0);\\n    }\\n\\n    /**\\n     * @dev Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol\\n     * @param _from From address\\n     * @param _to To address\\n     * @param _value Amount of baseAsset value to transfer\\n     */\\n    function protocolPayment(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external override nonReentrant onlyProtocol whenNotPaused {\\n        _protocolPayment(_from, _to, _value, 0, address(0), 0);\\n    }\\n\\n    function _protocolPayment(\\n        address _from,\\n        address _to,\\n        uint256 _value,\\n        uint256 _protocolFee,\\n        address _network,\\n        uint256 _networkFee\\n    ) internal {\\n        uint256 shares = _sharesForValue(_value);\\n\\n        uint256 protocolFeeShares = 0;\\n        if (_protocolFee > 0) {\\n            protocolFeeShares = _sharesForValue(_protocolFee);\\n        }\\n\\n        uint256 networkFeeShares = 0;\\n        if (_networkFee > 0 && _network != address(0)) {\\n            networkFeeShares = _sharesForValue(_networkFee);\\n        }\\n\\n        _transfer(_from, _to, shares); // payment from consumer to provider\\n\\n        if (protocolFeeShares > 0) {\\n            _transfer(_to, feeDistributor, protocolFeeShares); // fee from provider to fee distributor\\n        }\\n        if (networkFeeShares > 0) {\\n            _transfer(_to, _network, networkFeeShares); // network fee from provider to network\\n        }\\n\\n        emit Payment(_from, _to, _value, shares, _protocolFee, protocolFeeShares, _network,\\n            _networkFee, networkFeeShares);\\n    }\\n\\n    function transferValue(\\n        address _recipient,\\n        uint256 _value\\n    ) external override nonReentrant whenNotPaused returns (bool) {\\n        uint256 amount = _sharesForValue(_value);\\n        _transfer(_msgSender(), _recipient, amount);\\n        emit TransferValue(_msgSender(), _recipient, _value, amount);\\n        return true;\\n    }\\n\\n    function transferValueFrom(\\n        address _sender,\\n        address _recipient,\\n        uint256 _value\\n    ) external override nonReentrant whenNotPaused returns (bool) {\\n        uint256 amount = _sharesForValue(_value);\\n        _transfer(_sender, _recipient, amount);\\n\\n        uint256 currentAllowance = allowance(_sender, _msgSender());\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(_sender, _msgSender(), currentAllowance - amount);\\n        }\\n        emit TransferValue(_sender, _recipient, _value, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Deposit an amount of `_asset` into the vault and credit the equal value of `baseAsset`\\n     * @param _asset Address of incoming asset\\n     * @param _assetAmount Amount of asset to deposit\\n     */\\n    function deposit(\\n        address _asset,\\n        uint256 _assetAmount\\n    ) external override nonReentrant whenNotPaused {\\n        _depositTo(_msgSender(), _asset, _assetAmount);\\n    }\\n\\n    /**\\n     * @dev Deposit an amount of `_asset` into the vault and credit the equal value of `baseAsset`\\n     * @param _to Recipient of funds\\n     * @param _asset Address of incoming asset\\n     * @param _assetAmount Amount of asset to deposit\\n     */\\n    function depositTo(\\n        address _to,\\n        address _asset,\\n        uint256 _assetAmount\\n    ) external override nonReentrant whenNotPaused {\\n        _depositTo(_to, _asset, _assetAmount);\\n    }\\n\\n    function _depositTo(\\n        address _to,\\n        address _asset,\\n        uint256 _assetAmount\\n    ) internal {\\n        require(assets[_asset].allowed, \\\"!NOT_ALLOWED(asset)\\\");\\n        require(_assetAmount > 0, \\\"!INVALID(assetAmount)\\\");\\n        require(_totalAssetBalance(_asset) + _assetAmount <= assets[_asset].depositLimit, \\\"!DEPOSIT_LIMIT(asset)\\\");\\n\\n        uint256 baseAssetAmount = _assetAmount;\\n        if (_asset != baseAsset) {\\n            Asset storage asset = assets[_asset];\\n\\n            // subtract slippage bps from deposited amount\\n            uint256 slippage = (_assetAmount * asset.slippageBps) / 10000;\\n\\n            baseAssetAmount = _convertPrice(_asset, baseAsset, (_assetAmount - slippage));\\n        }\\n\\n        require(baseAssetAmount >= minDeposit, \\\"!MIN_DEPOSIT\\\");\\n\\n        // calculate shares before transferring new asset into vault\\n        uint256 shares = baseAssetAmount;\\n        if (totalSupply() > 0) {\\n            // use round up integer division so that deposits are not short changed\\n            shares = ((baseAssetAmount * totalSupply()) - 1) / _totalValue() + 1;\\n        }\\n\\n        IERC20(_asset).safeTransferFrom(_msgSender(), address(this), _assetAmount);\\n\\n        _mint(_to, shares);\\n\\n        emit AssetDeposited(_to, _asset, _assetAmount, baseAssetAmount, shares);\\n    }\\n\\n    /**\\n     * @dev Withdraw an amount of shares from the vault in the form of `_asset`\\n     * @param _asset Address of outgoing asset\\n     * @param _shares Amount of shares to withdraw\\n     */\\n    function withdraw(\\n        address _asset,\\n        uint256 _shares\\n    ) external override nonReentrant whenNotPaused {\\n        _withdrawTo(_msgSender(), _asset, _shares);\\n    }\\n\\n    /**\\n     * @dev Withdraw an amount of shares from the vault in the form of `_asset`\\n     * @param _recipient Recipient who will receive the withdrawn assets\\n     * @param _asset Address of outgoing asset\\n     * @param _shares Amount of shares to withdraw\\n     */\\n    function withdrawTo(\\n        address _recipient,\\n        address _asset,\\n        uint256 _shares\\n    ) external override nonReentrant whenNotPaused {\\n        _withdrawTo(_recipient, _asset, _shares);\\n    }\\n\\n    function _withdrawTo(\\n        address _recipient,\\n        address _asset,\\n        uint256 _shares\\n    ) internal {\\n        require(assets[_asset].allowed, \\\"!NOT_ALLOWED(asset)\\\");\\n        require(_shares > 0, \\\"!INVALID(sharesAmount)\\\");\\n\\n        // calculate amount before supply adjustment\\n        uint256 baseAmount = _shareValue(_shares);\\n\\n        _burn(_msgSender(), _shares);\\n\\n        uint256 assetAmount = baseAmount;\\n        if (_asset != baseAsset) {\\n            Asset storage asset = assets[_asset];\\n\\n            assetAmount = _convertPrice(baseAsset, _asset, baseAmount);\\n\\n            // subtract slippage bps from withdrawing amount\\n            uint256 slippage = (assetAmount * asset.slippageBps) / 10000;\\n            assetAmount = assetAmount - slippage;\\n        }\\n\\n        // transfer requested stablecoin to _recipient\\n        IERC20(_asset).safeTransfer(_recipient, assetAmount);\\n\\n        emit AssetWithdrawn(_recipient, _asset, assetAmount, baseAmount, _shares);\\n    }\\n\\n    function currentValueOf(\\n        address _address\\n    ) external override view returns(uint256) {\\n        return _shareValue(balanceOf(_address));\\n    }\\n\\n    function pricePerShare() external override view returns(uint256) {\\n        return _shareValue(10 ** assets[baseAsset].assetDecimals);\\n    }\\n\\n    /************************** SHARES FUNCTIONS **************************/\\n\\n    function sharesForValue(\\n        uint256 _value\\n    ) external override view returns(uint256) {\\n        return _sharesForValue(_value);\\n    }\\n\\n    function _sharesForValue(\\n        uint256 _value\\n    ) internal view returns(uint256) {\\n        if (totalSupply() > 0) {\\n            return (_value * totalSupply()) / _totalValue();\\n        } else {\\n            return _value;\\n        }\\n    }\\n\\n    function _shareValue(\\n        uint256 _shares\\n    ) internal view returns(uint256) {\\n        if (totalSupply() == 0) {\\n            return _shares;\\n        }\\n        return (_totalValue() * _shares) / totalSupply();\\n    }\\n\\n    function totalValue() external override view returns(uint256) {\\n        return _totalValue();\\n    }\\n    function _totalValue() internal view returns(uint256) {\\n        uint256 total = 0;\\n\\n        for (uint256 i = 0; i < allAssets.length; i++) {\\n            if (allAssets[i] == baseAsset) {\\n                total = total + _totalAssetBalance(baseAsset);\\n            } else {\\n                total = total + _convertPrice(allAssets[i], baseAsset, _totalAssetBalance(allAssets[i]));\\n            }\\n        }\\n\\n        return total;\\n    }\\n\\n    function totalAssetBalance(\\n        address _asset\\n    ) external override view returns(uint256) {\\n        return _totalAssetBalance(_asset);\\n    }\\n    function _totalAssetBalance(\\n        address _asset\\n    ) internal view returns(uint256) {\\n        return IERC20(_asset).balanceOf(address(this));\\n    }\\n\\n\\n    /************************** ADMIN FUNCTIONS **************************/\\n\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    function addProtocol(\\n        address _protocol\\n    ) external onlyOwner {\\n        protocols.push(_protocol);\\n    }\\n\\n    function removeProtocol(\\n        address _protocol\\n    ) external onlyOwner {\\n        uint256 idx = protocols.length;\\n        for (uint256 i = 0; i < protocols.length; i++) {\\n            if (protocols[i] == _protocol) {\\n                idx = i;\\n                break;\\n            }\\n        }\\n        if (idx < protocols.length) {\\n            protocols[idx] = protocols[protocols.length - 1];\\n            protocols.pop();\\n        }\\n    }\\n\\n    function protocolCount() external view returns(uint256) {\\n        return protocols.length;\\n    }\\n\\n    function setFeeDistributor(\\n        address _feeDistributor\\n    ) external onlyOwner {\\n        feeDistributor = _feeDistributor;\\n    }\\n\\n    function setMinDeposit(\\n        uint256 _minDeposit\\n    ) external onlyOwner {\\n        minDeposit = _minDeposit;\\n    }\\n\\n    function setTrustedForwarder(\\n        address _forwarder\\n    ) external onlyOwner {\\n        _setTrustedForwarder(_forwarder);\\n    }\\n\\n\\n    /************************** ASSET FUNCTIONS **************************/\\n\\n    function getBaseAsset() external view override returns(address) {\\n        return baseAsset;\\n    }\\n\\n    function getAllAssets() external view override returns(address[] memory) {\\n        return allAssets;\\n    }\\n\\n    function getAsset(\\n        address _asset\\n    ) external view override returns(Asset memory) {\\n        return assets[_asset];\\n    }\\n\\n    /**\\n     * @dev Check if the vault supports an asset\\n     * @param _asset Asset address\\n     * @return bool `true` if asset supported, `false` otherwise\\n     */\\n    function supportsAsset(\\n        address _asset\\n    ) external view override returns (bool) {\\n        return assets[_asset].allowed;\\n    }\\n\\n    /**\\n     * @dev Add an allowed asset to be deposited into the vault\\n     * @param _asset Address of new ERC20 asset\\n     * @param _priceFeed Address of a chainlink-compatible price oracle for the asset\\n     * @param _slippageBps Slippage basis points to use when depositing/withdrawing this asset\\n     */\\n    function allowAsset(\\n        address _asset,\\n        address _priceFeed,\\n        uint256 _depositLimit,\\n        uint256 _slippageBps\\n    ) external onlyOwner {\\n        require(IERC20Metadata(_asset).decimals() > 0, \\\"!INVALID(asset)\\\");\\n        require(AggregatorV3Interface(_priceFeed).decimals() > 0, \\\"!INVALID(priceFeed)\\\");\\n\\n        Asset storage asset = assets[_asset];\\n\\n        // add to allAsset list just the first time\\n        if (asset.assetDecimals == 0) {\\n            allAssets.push(_asset);\\n        }\\n\\n        asset.allowed = true;\\n        asset.priceFeed = _priceFeed;\\n        asset.depositLimit = _depositLimit;\\n        asset.slippageBps = _slippageBps;\\n        asset.assetDecimals = IERC20Metadata(_asset).decimals();\\n        asset.priceFeedDecimals = AggregatorV3Interface(_priceFeed).decimals();\\n\\n        emit AllowedAsset(_asset);\\n    }\\n\\n    /**\\n     * @dev Mark an already allowed asset to no longer be allowed for deposits/withdraws\\n     * @param _asset Address of new ERC20 asset\\n     */\\n    function disallowAsset(\\n        address _asset\\n    ) external onlyOwner {\\n        require(assets[_asset].allowed, \\\"!ASSET_NOT_ALLOWED\\\");\\n\\n        assets[_asset].allowed = false;\\n\\n        emit DisallowedAsset(_asset);\\n    }\\n\\n    function convertPrice(\\n        address _fromAsset,\\n        address _toAsset,\\n        uint256 _fromAmount\\n    ) external view returns(uint256) {\\n        return _convertPrice(_fromAsset, _toAsset, _fromAmount);\\n    }\\n\\n    /**\\n     * @dev Convert _amount from one asset price to another\\n     */\\n    function _convertPrice(\\n        address _fromAsset,\\n        address _toAsset,\\n        uint256 _fromAmount\\n    ) internal view returns(uint256) {\\n        require(_fromAsset != _toAsset, \\\"!SAME_ASSET\\\");\\n        require(assets[_fromAsset].priceFeed != address(0), \\\"!INVALID(fromAsset)\\\");\\n        require(assets[_toAsset].priceFeed != address(0), \\\"!NOT_ALLOWED(toAsset)\\\");\\n\\n        if (_fromAmount == 0) {\\n            return 0;\\n        }\\n\\n        int256 oraclePrice;\\n\\n        ( , oraclePrice, , , ) = AggregatorV3Interface(assets[_fromAsset].priceFeed).latestRoundData();\\n        uint256 fromOraclePrice = uint256(oraclePrice);\\n        ( , oraclePrice, , , ) = AggregatorV3Interface(assets[_toAsset].priceFeed).latestRoundData();\\n        uint256 toOraclePrice = uint256(oraclePrice);\\n\\n        if (assets[_fromAsset].priceFeedDecimals != assets[_toAsset].priceFeedDecimals) {\\n            // since oracle precision is different, scale everything\\n            // to _toAsset precision and do conversion\\n            return _scalePrice(_fromAmount, assets[_fromAsset].assetDecimals, assets[_toAsset].assetDecimals) *\\n                    _scalePrice(fromOraclePrice, assets[_fromAsset].priceFeedDecimals, assets[_toAsset].assetDecimals) /\\n                    _scalePrice(toOraclePrice, assets[_toAsset].priceFeedDecimals, assets[_toAsset].assetDecimals);\\n        } else {\\n            // oracles are already in same precision, so just scale _amount to oracle precision,\\n            // do the price conversion and convert back to _toAsset precision\\n            return _scalePrice(\\n                    _scalePrice(_fromAmount, assets[_fromAsset].assetDecimals, assets[_toAsset].priceFeedDecimals) *\\n                            fromOraclePrice / toOraclePrice,\\n                        assets[_toAsset].priceFeedDecimals,\\n                        assets[_toAsset].assetDecimals\\n            );\\n        }\\n    }\\n\\n    function _scalePrice(\\n        uint256 _price,\\n        uint8 _priceDecimals,\\n        uint8 _decimals\\n    ) internal pure returns (uint256){\\n        if (_priceDecimals < _decimals) {\\n            return _price * uint256(10 ** uint256(_decimals - _priceDecimals));\\n        } else if (_priceDecimals > _decimals) {\\n            return _price / uint256(10 ** uint256(_priceDecimals - _decimals));\\n        }\\n        return _price;\\n    }\\n\\n}\",\"keccak256\":\"0xa965121345917e5ac5cb4d61a7a389f454f004d811efdc3589bb442ce33d7e1a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b5062000102565b6000620000f630620000fc60201b620020b81760201c565b15905090565b3b151590565b613ec880620001126000396000f3fe608060405234801561001057600080fd5b50600436106103275760003560e01c806379b2125f116101b8578063aaac831f11610104578063dd62ed3e116100a2578063f213159c1161007c578063f213159c1461081e578063f2fde38b14610831578063f3fef3a314610844578063fcd6a25b1461085757600080fd5b8063dd62ed3e146107c9578063e1ded2de14610802578063e2eed04f1461081557600080fd5b8063ccfc2e8d116100de578063ccfc2e8d14610788578063cdf456e11461079b578063d4c3eea0146107ae578063da742228146107b657600080fd5b8063aaac831f1461074f578063c0c53b8b14610762578063c3b35a7e1461077557600080fd5b80638e3e580d1161017157806399530b061161014b57806399530b06146106eb578063a457c2d7146106f3578063a9059cbb14610706578063aa388af61461071957600080fd5b80638e3e580d146106bd5780638fcc9cfb146106d057806395d89b41146106e357600080fd5b806379b2125f1461065c5780637da0a8771461066f5780638456cb59146106805780638c396220146106885780638d3a4af61461069b5780638da5cb5b146106ac57600080fd5b80633f4ba83a11610277578063572b6c05116102305780635c975abb1161020a5780635c975abb1461060d57806370a0823114610618578063715018a614610641578063771d4c281461064957600080fd5b8063572b6c05146105c5578063597435cb146105e75780635a4161ff146105fa57600080fd5b80633f4ba83a1461055957806341b3d1851461056157806347e7ef241461056b578063486ff0cd1461057e5780634bb846e11461059f5780635517575d146105b257600080fd5b80631e377d39116102e45780632acada4d116102be5780632acada4d1461040b57806330b8b2c614610420578063313ce5671461052c578063395093511461054657600080fd5b80631e377d39146103d25780632298d849146103e557806323b872dd146103f857600080fd5b806306fdde031461032c57806308751b181461034a578063095ea7b31461036d5780630d43e8ad1461038057806318160ddd146103ab57806318ff5768146103bd575b600080fd5b61033461086a565b60405161034191906137fa565b60405180910390f35b61035d610358366004613844565b6108fc565b6040519015158152602001610341565b61035d61037b366004613880565b610a16565b60fe54610393906001600160a01b031681565b6040516001600160a01b039091168152602001610341565b6036545b604051908152602001610341565b6103d06103cb3660046138aa565b610a34565b005b6103d06103e03660046138c5565b610ba3565b6103d06103f33660046138aa565b610f65565b61035d610406366004613844565b611063565b6104136110f5565b6040516103419190613907565b6104d061042e3660046138aa565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506001600160a01b03908116600090815260ff6020818152604092839020835160c08101855281549095168552600181015491850191909152600281015492840192909252600390910154808216606084015261010081048216608084015262010000900416151560a082015290565b6040516103419190600060c08201905060018060a01b038351168252602083015160208301526040830151604083015260ff606084015116606083015260ff608084015116608083015260a0830151151560a083015292915050565b610534611157565b60405160ff9091168152602001610341565b61035d610554366004613880565b6111d9565b6103d061122d565b6103af6101025481565b6103d0610579366004613880565b611280565b6040805180820190915260058152640322e322e360dc1b6020820152610334565b6103af6105ad366004613844565b6112e6565b6103af6105c03660046138aa565b6112fb565b61035d6105d33660046138aa565b6033546001600160a01b0391821691161490565b6103af6105f53660046138aa565b611306565b61035d610608366004613880565b61132d565b60985460ff1661035d565b6103af6106263660046138aa565b6001600160a01b031660009081526034602052604090205490565b6103d0611406565b6103d06106573660046138aa565b611459565b6103d061066a366004613954565b6114f5565b6033546001600160a01b0316610393565b6103d06115e4565b6103936106963660046139b3565b611635565b60fd546001600160a01b0316610393565b6066546001600160a01b0316610393565b6103d06106cb366004613844565b611660565b6103d06106de3660046139b3565b61174e565b61033461179d565b6103af6117ac565b61035d610701366004613880565b6117dc565b61035d610714366004613880565b611893565b61035d6107273660046138aa565b6001600160a01b0316600090815260ff60208190526040909120600301546201000090041690565b60fc54610393906001600160a01b031681565b6103d06107703660046139cc565b6118a7565b6103d0610783366004613844565b611d16565b6103d06107963660046138aa565b611d76565b60fd54610393906001600160a01b031681565b6103af611de1565b6103d06107c43660046138aa565b611deb565b6103af6107d7366004613a0f565b6001600160a01b03918216600090815260356020908152604080832093909416825291909152205490565b6103af6108103660046139b3565b611e55565b610101546103af565b6103d061082c366004613844565b611e60565b6103d061083f3660046138aa565b611eb6565b6103d0610852366004613880565b611f6d565b6103d06108653660046138c5565b611fca565b60606037805461087990613a42565b80601f01602080910402602001604051908101604052809291908181526020018280546108a590613a42565b80156108f25780601f106108c7576101008083540402835291602001916108f2565b820191906000526020600020905b8154815290600101906020018083116108d557829003601f168201915b5050505050905090565b6000600260ca54141561092a5760405162461bcd60e51b815260040161092190613a77565b60405180910390fd5b600260ca5560985460ff16156109525760405162461bcd60e51b815260040161092190613aae565b600061095d836120be565b905061096a8585836120f8565b6000610978866107d76122c6565b90508181101561099a5760405162461bcd60e51b815260040161092190613ad8565b6109ae866109a66122c6565b8484036122d0565b846001600160a01b0316866001600160a01b03167fc8cf4e5d87b5b4ffb59d20991b0840a27d2227ee272dae54bacf0f4b4184bf7786856040516109fc929190918252602082015260400190565b60405180910390a3600192505050600160ca559392505050565b6000610a2a610a236122c6565b84846122d0565b5060015b92915050565b610a3c6122c6565b6001600160a01b0316610a576066546001600160a01b031690565b6001600160a01b031614610a7d5760405162461bcd60e51b815260040161092190613b20565b6101015460005b61010154811015610ae257826001600160a01b03166101018281548110610aad57610aad613b55565b6000918252602090912001546001600160a01b03161415610ad057809150610ae2565b80610ada81613b81565b915050610a84565b5061010154811015610b9f576101018054610aff90600190613b9c565b81548110610b0f57610b0f613b55565b60009182526020909120015461010180546001600160a01b039092169183908110610b3c57610b3c613b55565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610101805480610b7c57610b7c613bb3565b600082815260209020810160001990810180546001600160a01b03191690550190555b5050565b610bab6122c6565b6001600160a01b0316610bc66066546001600160a01b031690565b6001600160a01b031614610bec5760405162461bcd60e51b815260040161092190613b20565b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190613bc9565b60ff1611610ca15760405162461bcd60e51b815260206004820152600f60248201526e21494e56414c49442861737365742960881b6044820152606401610921565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610cdc57600080fd5b505afa158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d149190613bc9565b60ff1611610d5a5760405162461bcd60e51b815260206004820152601360248201527221494e56414c4944287072696365466565642960681b6044820152606401610921565b6001600160a01b038416600090815260ff602081905260409091206003810154909116610dce5761010080546001810182556000919091527f45e010b9ae401e2eb71529478da8bd513a9bdc2d095a111e324f5b95c09ed87b0180546001600160a01b0319166001600160a01b0387161790555b60038101805462ff000019166201000017905580546001600160a01b038086166001600160a01b031990921691909117825560028201849055600182018390556040805163313ce56760e01b815290519187169163313ce56791600480820192602092909190829003018186803b158015610e4857600080fd5b505afa158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e809190613bc9565b8160030160006101000a81548160ff021916908360ff160217905550836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed557600080fd5b505afa158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d9190613bc9565b60038201805460ff929092166101000261ff00199092169190911790556040516001600160a01b038616907f06a94869c30cb7089f57f8d4a5ff251ac74a8c2bc361e7f91bda209898de8ead90600090a25050505050565b610f6d6122c6565b6001600160a01b0316610f886066546001600160a01b031690565b6001600160a01b031614610fae5760405162461bcd60e51b815260040161092190613b20565b6001600160a01b038116600090815260ff6020819052604090912060030154620100009004166110155760405162461bcd60e51b8152602060048201526012602482015271085054d4d15517d393d517d0531313d5d15160721b6044820152606401610921565b6001600160a01b038116600081815260ff6020526040808220600301805462ff000019169055517f0a8090b3b8835c60a03ebb0cc69833b4359a1924917dbc2e80bb4516428da0a39190a250565b60006110708484846120f8565b6001600160a01b0384166000908152603560205260408120816110916122c6565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156110d45760405162461bcd60e51b815260040161092190613ad8565b6110e8856110e06122c6565b8584036122d0565b60019150505b9392505050565b60606101008054806020026020016040519081016040528092919081815260200182805480156108f257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611130575050505050905090565b60fd546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561119c57600080fd5b505afa1580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190613bc9565b905090565b6000610a2a6111e66122c6565b8484603560006111f46122c6565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546112289190613bec565b6122d0565b6112356122c6565b6001600160a01b03166112506066546001600160a01b031690565b6001600160a01b0316146112765760405162461bcd60e51b815260040161092190613b20565b61127e6123f4565b565b600260ca5414156112a35760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff16156112cb5760405162461bcd60e51b815260040161092190613aae565b6112dd6112d66122c6565b838361248d565b5050600160ca55565b60006112f384848461273e565b949350505050565b6000610a2e82612b1d565b6001600160a01b038116600090815260346020526040812054610a2e90612b97565b612b97565b6000600260ca5414156113525760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff161561137a5760405162461bcd60e51b815260040161092190613aae565b6000611385836120be565b90506113996113926122c6565b85836120f8565b836001600160a01b03166113ab6122c6565b6001600160a01b03167fc8cf4e5d87b5b4ffb59d20991b0840a27d2227ee272dae54bacf0f4b4184bf7785846040516113ee929190918252602082015260400190565b60405180910390a36001915050600160ca5592915050565b61140e6122c6565b6001600160a01b03166114296066546001600160a01b031690565b6001600160a01b03161461144f5760405162461bcd60e51b815260040161092190613b20565b61127e6000612bc0565b6114616122c6565b6001600160a01b031661147c6066546001600160a01b031690565b6001600160a01b0316146114a25760405162461bcd60e51b815260040161092190613b20565b61010180546001810182556000919091527f109ea3cebb188b9c1b9fc5bb3920be60dfdc8699098dff92f3d80daaca7476890180546001600160a01b0319166001600160a01b0392909216919091179055565b600260ca5414156115185760405162461bcd60e51b815260040161092190613a77565b600260ca556000805b6101015481101561158757610101818154811061154057611540613b55565b6000918252602090912001546001600160a01b031661155d6122c6565b6001600160a01b031614156115755760019150611587565b8061157f81613b81565b915050611521565b50806115a55760405162461bcd60e51b815260040161092190613c04565b60985460ff16156115c85760405162461bcd60e51b815260040161092190613aae565b6115d6878787878787612c12565b5050600160ca555050505050565b6115ec6122c6565b6001600160a01b03166116076066546001600160a01b031690565b6001600160a01b03161461162d5760405162461bcd60e51b815260040161092190613b20565b61127e612d0b565b610101818154811061164657600080fd5b6000918252602090912001546001600160a01b0316905081565b600260ca5414156116835760405162461bcd60e51b815260040161092190613a77565b600260ca556000805b610101548110156116f25761010181815481106116ab576116ab613b55565b6000918252602090912001546001600160a01b03166116c86122c6565b6001600160a01b031614156116e057600191506116f2565b806116ea81613b81565b91505061168c565b50806117105760405162461bcd60e51b815260040161092190613c04565b60985460ff16156117335760405162461bcd60e51b815260040161092190613aae565b6117438484846000806000612c12565b5050600160ca555050565b6117566122c6565b6001600160a01b03166117716066546001600160a01b031690565b6001600160a01b0316146117975760405162461bcd60e51b815260040161092190613b20565b61010255565b60606038805461087990613a42565b60fd546001600160a01b0316600090815260ff602081905260408220600301546111d4916113289116600a613d07565b600080603560006117eb6122c6565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156118755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610921565b6118896118806122c6565b858584036122d0565b5060019392505050565b6000610a2a6118a06122c6565b84846120f8565b600054610100900460ff166118c25760005460ff16156118c6565b303b155b6119295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610921565b600054610100900460ff1615801561194b576000805461ffff19166101011790555b611953612d64565b61195b612d9b565b611963612dd2565b6119b2604051806040016040528060118152602001704361736b205661756c7420546f6b656e7360781b8152506040518060400160405280600481526020016309a82a6960e31b815250612e01565b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156119ed57600080fd5b505afa158015611a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a259190613bc9565b60ff1611611a6b5760405162461bcd60e51b815260206004820152601360248201527221494e56414c4944286261736541737365742960681b6044820152606401610921565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611aa657600080fd5b505afa158015611aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ade9190613bc9565b60ff1611611b2e5760405162461bcd60e51b815260206004820152601c60248201527f21494e56414c49442862617365417373657450726963654665656429000000006044820152606401610921565b6001600160a01b03848116600081815260ff602090815260409182902080546001600160a01b031916948816949094178455815163313ce56760e01b8152915163313ce567926004808201939291829003018186803b158015611b9057600080fd5b505afa158015611ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc89190613bc9565b8160030160006101000a81548160ff021916908360ff160217905550836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1d57600080fd5b505afa158015611c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c559190613bc9565b6003820180546000196002850155600060019485018190556201000062ffff001990921661010060ff95909516850262ff000019161791909117909155815492830182559081527f45e010b9ae401e2eb71529478da8bd513a9bdc2d095a111e324f5b95c09ed87b90910180546001600160a01b03199081166001600160a01b0388811691821790935560fd80548316909117905560fe8054909116918516919091179055610102558015611d10576000805461ff00191690555b50505050565b600260ca541415611d395760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff1615611d615760405162461bcd60e51b815260040161092190613aae565b611d6c838383612e3a565b5050600160ca5550565b611d7e6122c6565b6001600160a01b0316611d996066546001600160a01b031690565b6001600160a01b031614611dbf5760405162461bcd60e51b815260040161092190613b20565b60fe80546001600160a01b0319166001600160a01b0392909216919091179055565b60006111d4612fde565b611df36122c6565b6001600160a01b0316611e0e6066546001600160a01b031690565b6001600160a01b031614611e345760405162461bcd60e51b815260040161092190613b20565b603380546001600160a01b0319166001600160a01b03831617905550565b50565b6000610a2e826120be565b600260ca541415611e835760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff1615611eab5760405162461bcd60e51b815260040161092190613aae565b611d6c83838361248d565b611ebe6122c6565b6001600160a01b0316611ed96066546001600160a01b031690565b6001600160a01b031614611eff5760405162461bcd60e51b815260040161092190613b20565b6001600160a01b038116611f645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610921565b611e5281612bc0565b600260ca541415611f905760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff1615611fb85760405162461bcd60e51b815260040161092190613aae565b6112dd611fc36122c6565b8383612e3a565b600260ca541415611fed5760405162461bcd60e51b815260040161092190613a77565b600260ca556000805b6101015481101561205c57610101818154811061201557612015613b55565b6000918252602090912001546001600160a01b03166120326122c6565b6001600160a01b0316141561204a576001915061205c565b8061205481613b81565b915050611ff6565b508061207a5760405162461bcd60e51b815260040161092190613c04565b60985460ff161561209d5760405162461bcd60e51b815260040161092190613aae565b6120ac85858585600080612c12565b5050600160ca55505050565b3b151590565b6000806120ca60365490565b11156120ef576120d8612fde565b6036546120e59084613d16565b610a2e9190613d35565b5090565b919050565b6001600160a01b03831661215c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610921565b6001600160a01b0382166121be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610921565b6001600160a01b038316600090815260346020526040902054818110156122365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610921565b6001600160a01b0380851660009081526034602052604080822085850390559185168152908120805484929061226d908490613bec565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122b991815260200190565b60405180910390a3611d10565b60006111d46130e7565b6001600160a01b0383166123325760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610921565b6001600160a01b0382166123935760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610921565b6001600160a01b0383811660008181526035602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60985460ff1661243d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610921565b6098805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124706122c6565b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216600090815260ff6020819052604090912060030154620100009004166124f55760405162461bcd60e51b8152602060048201526013602482015272214e4f545f414c4c4f5745442861737365742960681b6044820152606401610921565b6000811161253d5760405162461bcd60e51b815260206004820152601560248201527421494e56414c4944286173736574416d6f756e742960581b6044820152606401610921565b6001600160a01b038216600090815260ff60205260409020600201548161256384612b1d565b61256d9190613bec565b11156125b35760405162461bcd60e51b8152602060048201526015602482015274214445504f5349545f4c494d49542861737365742960581b6044820152606401610921565b60fd5481906001600160a01b0384811691161461262b576001600160a01b038316600090815260ff602052604081206001810154909190612710906125f89086613d16565b6126029190613d35565b60fd549091506126269086906001600160a01b03166126218488613b9c565b61273e565b925050505b6101025481101561266d5760405162461bcd60e51b815260206004820152600c60248201526b0853525397d1115413d4d25560a21b6044820152606401610921565b80600061267960365490565b11156126be57612687612fde565b600161269260365490565b61269c9085613d16565b6126a69190613b9c565b6126b09190613d35565b6126bb906001613bec565b90505b6126db6126c96122c6565b6001600160a01b03861690308661311b565b6126e58582613186565b60408051848152602081018490529081018290526001600160a01b0380861691908716907fbef68d45f01f5e2c114616dc4840e7a543da6ec57afc5700e4be96056a899b4e906060015b60405180910390a35050505050565b6000826001600160a01b0316846001600160a01b031614156127905760405162461bcd60e51b815260206004820152600b60248201526a0854d0535157d054d4d15560aa1b6044820152606401610921565b6001600160a01b03848116600090815260ff6020526040902054166127ed5760405162461bcd60e51b815260206004820152601360248201527221494e56414c49442866726f6d41737365742960681b6044820152606401610921565b6001600160a01b03838116600090815260ff60205260409020541661284c5760405162461bcd60e51b8152602060048201526015602482015274214e4f545f414c4c4f57454428746f41737365742960581b6044820152606401610921565b81612859575060006110ee565b6001600160a01b03808516600090815260ff6020526040808220548151633fabe5a360e21b815291519293169163feaf968c9160048082019260a092909190829003018186803b1580156128ac57600080fd5b505afa1580156128c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e49190613d71565b5050506001600160a01b03808716600090815260ff602052604090819020548151633fabe5a360e21b815291519395508594509091169163feaf968c9160048082019260a092909190829003018186803b15801561294157600080fd5b505afa158015612955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129799190613d71565b5050506001600160a01b03808816600090815260ff60208190526040808320600390810154948d168452922090910154929550859350610100928390048116929091041614612a92576001600160a01b038616600090815260ff60208190526040909120600301546129f5918391610100810482169116613265565b6001600160a01b03808916600090815260ff60208190526040808320600390810154948c168452922090910154612a3792869261010090910481169116613265565b6001600160a01b03808a16600090815260ff60208190526040808320600390810154948d168452922090910154612a74928a929081169116613265565b612a7e9190613d16565b612a889190613d35565b93505050506110ee565b6001600160a01b03808816600090815260ff60208190526040808320600390810154948b168452922090910154612a889284928692612adc928b9290811691610100900416613265565b612ae69190613d16565b612af09190613d35565b6001600160a01b038816600090815260ff6020819052604090912060030154610100810482169116613265565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015612b5f57600080fd5b505afa158015612b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190613dc1565b6000612ba260365490565b612baa575090565b60365482612bb6612fde565b6120e59190613d16565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000612c1d856120be565b905060008415612c3357612c30856120be565b90505b60008084118015612c4c57506001600160a01b03851615155b15612c5d57612c5a846120be565b90505b612c688989856120f8565b8115612c865760fe54612c869089906001600160a01b0316846120f8565b8015612c9757612c978886836120f8565b6040805188815260208101859052908101879052606081018390526080810185905260a081018290526001600160a01b03808716918a8216918c16907fe231cd9559a5a16d19e2bf003665b108bb05f45a7318361550754822be725a1d9060c00160405180910390a4505050505050505050565b60985460ff1615612d2e5760405162461bcd60e51b815260040161092190613aae565b6098805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124706122c6565b600054610100900460ff16612d8b5760405162461bcd60e51b815260040161092190613dda565b612d936132d6565b61127e6132fd565b600054610100900460ff16612dc25760405162461bcd60e51b815260040161092190613dda565b612dca6132d6565b61127e613334565b600054610100900460ff16612df95760405162461bcd60e51b815260040161092190613dda565b61127e613367565b600054610100900460ff16612e285760405162461bcd60e51b815260040161092190613dda565b612e306132d6565b610b9f8282613395565b6001600160a01b038216600090815260ff602081905260409091206003015462010000900416612ea25760405162461bcd60e51b8152602060048201526013602482015272214e4f545f414c4c4f5745442861737365742960681b6044820152606401610921565b60008111612eeb5760405162461bcd60e51b815260206004820152601660248201527521494e56414c494428736861726573416d6f756e742960501b6044820152606401610921565b6000612ef682612b97565b9050612f09612f036122c6565b836133e3565b60fd5481906001600160a01b03858116911614612f7c576001600160a01b03808516600090815260ff6020526040902060fd549091612f4a9116868561273e565b91506000612710826001015484612f619190613d16565b612f6b9190613d35565b9050612f778184613b9c565b925050505b612f906001600160a01b0385168683613531565b60408051828152602081018490529081018490526001600160a01b0380861691908716907fc90b5405a6805d53680586ef15168b1d791e67ceebe68fa62eefdb81478763cc9060600161272f565b600080805b610100548110156130dc5760fd5461010080546001600160a01b03909216918390811061301257613012613b55565b6000918252602090912001546001600160a01b031614156130535760fd54613042906001600160a01b0316612b1d565b61304c9083613bec565b91506130ca565b6130bd610100828154811061306a5761306a613b55565b60009182526020909120015460fd5461010080546001600160a01b0393841693909216916126219190869081106130a3576130a3613b55565b6000918252602090912001546001600160a01b0316612b1d565b6130c79083613bec565b91505b806130d481613b81565b915050612fe3565b50919050565b505050565b60006014361080159061310457506033546001600160a01b031633145b15613116575060131936013560601c90565b503390565b6040516001600160a01b0380851660248301528316604482015260648101829052611d109085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613561565b6001600160a01b0382166131dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610921565b80603660008282546131ee9190613bec565b90915550506001600160a01b0382166000908152603460205260408120805483929061321b908490613bec565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008160ff168360ff16101561329e5761327f8383613e25565b61328d9060ff16600a613e48565b6132979085613d16565b90506110ee565b8160ff168360ff1611156132ce576132b68284613e25565b6132c49060ff16600a613e48565b6132979085613d35565b509192915050565b600054610100900460ff1661127e5760405162461bcd60e51b815260040161092190613dda565b600054610100900460ff166133245760405162461bcd60e51b815260040161092190613dda565b61127e61332f6122c6565b612bc0565b600054610100900460ff1661335b5760405162461bcd60e51b815260040161092190613dda565b6098805460ff19169055565b600054610100900460ff1661338e5760405162461bcd60e51b815260040161092190613dda565b600160ca55565b600054610100900460ff166133bc5760405162461bcd60e51b815260040161092190613dda565b81516133cf90603790602085019061373e565b5080516130e290603890602084019061373e565b6001600160a01b0382166134435760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610921565b6001600160a01b038216600090815260346020526040902054818110156134b75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610921565b6001600160a01b03831660009081526034602052604081208383039055603680548492906134e6908490613b9c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0383166024820152604481018290526130e290849063a9059cbb60e01b9060640161314f565b60006135b6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166136339092919063ffffffff16565b8051909150156130e257808060200190518101906135d49190613e54565b6130e25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610921565b60606112f3848460008585843b61368c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610921565b600080866001600160a01b031685876040516136a89190613e76565b60006040518083038185875af1925050503d80600081146136e5576040519150601f19603f3d011682016040523d82523d6000602084013e6136ea565b606091505b50915091506136fa828286613705565b979650505050505050565b606083156137145750816110ee565b8251156137245782518084602001fd5b8160405162461bcd60e51b815260040161092191906137fa565b82805461374a90613a42565b90600052602060002090601f01602090048101928261376c57600085556137b2565b82601f1061378557805160ff19168380011785556137b2565b828001600101855582156137b2579182015b828111156137b2578251825591602001919060010190613797565b506120ef9291505b808211156120ef57600081556001016137ba565b60005b838110156137e95781810151838201526020016137d1565b83811115611d105750506000910152565b60208152600082518060208401526138198160408501602087016137ce565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146120f357600080fd5b60008060006060848603121561385957600080fd5b6138628461382d565b92506138706020850161382d565b9150604084013590509250925092565b6000806040838503121561389357600080fd5b61389c8361382d565b946020939093013593505050565b6000602082840312156138bc57600080fd5b6110ee8261382d565b600080600080608085870312156138db57600080fd5b6138e48561382d565b93506138f26020860161382d565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b818110156139485783516001600160a01b031683529284019291840191600101613923565b50909695505050505050565b60008060008060008060c0878903121561396d57600080fd5b6139768761382d565b95506139846020880161382d565b945060408701359350606087013592506139a06080880161382d565b915060a087013590509295509295509295565b6000602082840312156139c557600080fd5b5035919050565b6000806000606084860312156139e157600080fd5b6139ea8461382d565b92506139f86020850161382d565b9150613a066040850161382d565b90509250925092565b60008060408385031215613a2257600080fd5b613a2b8361382d565b9150613a396020840161382d565b90509250929050565b600181811c90821680613a5657607f821691505b602082108114156130dc57634e487b7160e01b600052602260045260246000fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415613b9557613b95613b6b565b5060010190565b600082821015613bae57613bae613b6b565b500390565b634e487b7160e01b600052603160045260246000fd5b600060208284031215613bdb57600080fd5b815160ff811681146110ee57600080fd5b60008219821115613bff57613bff613b6b565b500190565b60208082526005908201526404282aaa8960db1b604082015260600190565b600181815b80851115613c5e578160001904821115613c4457613c44613b6b565b80851615613c5157918102915b93841c9390800290613c28565b509250929050565b600082613c7557506001610a2e565b81613c8257506000610a2e565b8160018114613c985760028114613ca257613cbe565b6001915050610a2e565b60ff841115613cb357613cb3613b6b565b50506001821b610a2e565b5060208310610133831016604e8410600b8410161715613ce1575081810a610a2e565b613ceb8383613c23565b8060001904821115613cff57613cff613b6b565b029392505050565b60006110ee60ff841683613c66565b6000816000190483118215151615613d3057613d30613b6b565b500290565b600082613d5257634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff811681146120f357600080fd5b600080600080600060a08688031215613d8957600080fd5b613d9286613d57565b9450602086015193506040860151925060608601519150613db560808701613d57565b90509295509295909350565b600060208284031215613dd357600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060ff821660ff841680821015613e3f57613e3f613b6b565b90039392505050565b60006110ee8383613c66565b600060208284031215613e6657600080fd5b815180151581146110ee57600080fd5b60008251613e888184602087016137ce565b919091019291505056fea2646970667358221220bfad87f341766b51e023e5e5ae3185bfcee4b50a1a5b88e2e9f4d6dd4f5e2d0064736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103275760003560e01c806379b2125f116101b8578063aaac831f11610104578063dd62ed3e116100a2578063f213159c1161007c578063f213159c1461081e578063f2fde38b14610831578063f3fef3a314610844578063fcd6a25b1461085757600080fd5b8063dd62ed3e146107c9578063e1ded2de14610802578063e2eed04f1461081557600080fd5b8063ccfc2e8d116100de578063ccfc2e8d14610788578063cdf456e11461079b578063d4c3eea0146107ae578063da742228146107b657600080fd5b8063aaac831f1461074f578063c0c53b8b14610762578063c3b35a7e1461077557600080fd5b80638e3e580d1161017157806399530b061161014b57806399530b06146106eb578063a457c2d7146106f3578063a9059cbb14610706578063aa388af61461071957600080fd5b80638e3e580d146106bd5780638fcc9cfb146106d057806395d89b41146106e357600080fd5b806379b2125f1461065c5780637da0a8771461066f5780638456cb59146106805780638c396220146106885780638d3a4af61461069b5780638da5cb5b146106ac57600080fd5b80633f4ba83a11610277578063572b6c05116102305780635c975abb1161020a5780635c975abb1461060d57806370a0823114610618578063715018a614610641578063771d4c281461064957600080fd5b8063572b6c05146105c5578063597435cb146105e75780635a4161ff146105fa57600080fd5b80633f4ba83a1461055957806341b3d1851461056157806347e7ef241461056b578063486ff0cd1461057e5780634bb846e11461059f5780635517575d146105b257600080fd5b80631e377d39116102e45780632acada4d116102be5780632acada4d1461040b57806330b8b2c614610420578063313ce5671461052c578063395093511461054657600080fd5b80631e377d39146103d25780632298d849146103e557806323b872dd146103f857600080fd5b806306fdde031461032c57806308751b181461034a578063095ea7b31461036d5780630d43e8ad1461038057806318160ddd146103ab57806318ff5768146103bd575b600080fd5b61033461086a565b60405161034191906137fa565b60405180910390f35b61035d610358366004613844565b6108fc565b6040519015158152602001610341565b61035d61037b366004613880565b610a16565b60fe54610393906001600160a01b031681565b6040516001600160a01b039091168152602001610341565b6036545b604051908152602001610341565b6103d06103cb3660046138aa565b610a34565b005b6103d06103e03660046138c5565b610ba3565b6103d06103f33660046138aa565b610f65565b61035d610406366004613844565b611063565b6104136110f5565b6040516103419190613907565b6104d061042e3660046138aa565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506001600160a01b03908116600090815260ff6020818152604092839020835160c08101855281549095168552600181015491850191909152600281015492840192909252600390910154808216606084015261010081048216608084015262010000900416151560a082015290565b6040516103419190600060c08201905060018060a01b038351168252602083015160208301526040830151604083015260ff606084015116606083015260ff608084015116608083015260a0830151151560a083015292915050565b610534611157565b60405160ff9091168152602001610341565b61035d610554366004613880565b6111d9565b6103d061122d565b6103af6101025481565b6103d0610579366004613880565b611280565b6040805180820190915260058152640322e322e360dc1b6020820152610334565b6103af6105ad366004613844565b6112e6565b6103af6105c03660046138aa565b6112fb565b61035d6105d33660046138aa565b6033546001600160a01b0391821691161490565b6103af6105f53660046138aa565b611306565b61035d610608366004613880565b61132d565b60985460ff1661035d565b6103af6106263660046138aa565b6001600160a01b031660009081526034602052604090205490565b6103d0611406565b6103d06106573660046138aa565b611459565b6103d061066a366004613954565b6114f5565b6033546001600160a01b0316610393565b6103d06115e4565b6103936106963660046139b3565b611635565b60fd546001600160a01b0316610393565b6066546001600160a01b0316610393565b6103d06106cb366004613844565b611660565b6103d06106de3660046139b3565b61174e565b61033461179d565b6103af6117ac565b61035d610701366004613880565b6117dc565b61035d610714366004613880565b611893565b61035d6107273660046138aa565b6001600160a01b0316600090815260ff60208190526040909120600301546201000090041690565b60fc54610393906001600160a01b031681565b6103d06107703660046139cc565b6118a7565b6103d0610783366004613844565b611d16565b6103d06107963660046138aa565b611d76565b60fd54610393906001600160a01b031681565b6103af611de1565b6103d06107c43660046138aa565b611deb565b6103af6107d7366004613a0f565b6001600160a01b03918216600090815260356020908152604080832093909416825291909152205490565b6103af6108103660046139b3565b611e55565b610101546103af565b6103d061082c366004613844565b611e60565b6103d061083f3660046138aa565b611eb6565b6103d0610852366004613880565b611f6d565b6103d06108653660046138c5565b611fca565b60606037805461087990613a42565b80601f01602080910402602001604051908101604052809291908181526020018280546108a590613a42565b80156108f25780601f106108c7576101008083540402835291602001916108f2565b820191906000526020600020905b8154815290600101906020018083116108d557829003601f168201915b5050505050905090565b6000600260ca54141561092a5760405162461bcd60e51b815260040161092190613a77565b60405180910390fd5b600260ca5560985460ff16156109525760405162461bcd60e51b815260040161092190613aae565b600061095d836120be565b905061096a8585836120f8565b6000610978866107d76122c6565b90508181101561099a5760405162461bcd60e51b815260040161092190613ad8565b6109ae866109a66122c6565b8484036122d0565b846001600160a01b0316866001600160a01b03167fc8cf4e5d87b5b4ffb59d20991b0840a27d2227ee272dae54bacf0f4b4184bf7786856040516109fc929190918252602082015260400190565b60405180910390a3600192505050600160ca559392505050565b6000610a2a610a236122c6565b84846122d0565b5060015b92915050565b610a3c6122c6565b6001600160a01b0316610a576066546001600160a01b031690565b6001600160a01b031614610a7d5760405162461bcd60e51b815260040161092190613b20565b6101015460005b61010154811015610ae257826001600160a01b03166101018281548110610aad57610aad613b55565b6000918252602090912001546001600160a01b03161415610ad057809150610ae2565b80610ada81613b81565b915050610a84565b5061010154811015610b9f576101018054610aff90600190613b9c565b81548110610b0f57610b0f613b55565b60009182526020909120015461010180546001600160a01b039092169183908110610b3c57610b3c613b55565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610101805480610b7c57610b7c613bb3565b600082815260209020810160001990810180546001600160a01b03191690550190555b5050565b610bab6122c6565b6001600160a01b0316610bc66066546001600160a01b031690565b6001600160a01b031614610bec5760405162461bcd60e51b815260040161092190613b20565b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190613bc9565b60ff1611610ca15760405162461bcd60e51b815260206004820152600f60248201526e21494e56414c49442861737365742960881b6044820152606401610921565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610cdc57600080fd5b505afa158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d149190613bc9565b60ff1611610d5a5760405162461bcd60e51b815260206004820152601360248201527221494e56414c4944287072696365466565642960681b6044820152606401610921565b6001600160a01b038416600090815260ff602081905260409091206003810154909116610dce5761010080546001810182556000919091527f45e010b9ae401e2eb71529478da8bd513a9bdc2d095a111e324f5b95c09ed87b0180546001600160a01b0319166001600160a01b0387161790555b60038101805462ff000019166201000017905580546001600160a01b038086166001600160a01b031990921691909117825560028201849055600182018390556040805163313ce56760e01b815290519187169163313ce56791600480820192602092909190829003018186803b158015610e4857600080fd5b505afa158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e809190613bc9565b8160030160006101000a81548160ff021916908360ff160217905550836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed557600080fd5b505afa158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d9190613bc9565b60038201805460ff929092166101000261ff00199092169190911790556040516001600160a01b038616907f06a94869c30cb7089f57f8d4a5ff251ac74a8c2bc361e7f91bda209898de8ead90600090a25050505050565b610f6d6122c6565b6001600160a01b0316610f886066546001600160a01b031690565b6001600160a01b031614610fae5760405162461bcd60e51b815260040161092190613b20565b6001600160a01b038116600090815260ff6020819052604090912060030154620100009004166110155760405162461bcd60e51b8152602060048201526012602482015271085054d4d15517d393d517d0531313d5d15160721b6044820152606401610921565b6001600160a01b038116600081815260ff6020526040808220600301805462ff000019169055517f0a8090b3b8835c60a03ebb0cc69833b4359a1924917dbc2e80bb4516428da0a39190a250565b60006110708484846120f8565b6001600160a01b0384166000908152603560205260408120816110916122c6565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156110d45760405162461bcd60e51b815260040161092190613ad8565b6110e8856110e06122c6565b8584036122d0565b60019150505b9392505050565b60606101008054806020026020016040519081016040528092919081815260200182805480156108f257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611130575050505050905090565b60fd546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561119c57600080fd5b505afa1580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190613bc9565b905090565b6000610a2a6111e66122c6565b8484603560006111f46122c6565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546112289190613bec565b6122d0565b6112356122c6565b6001600160a01b03166112506066546001600160a01b031690565b6001600160a01b0316146112765760405162461bcd60e51b815260040161092190613b20565b61127e6123f4565b565b600260ca5414156112a35760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff16156112cb5760405162461bcd60e51b815260040161092190613aae565b6112dd6112d66122c6565b838361248d565b5050600160ca55565b60006112f384848461273e565b949350505050565b6000610a2e82612b1d565b6001600160a01b038116600090815260346020526040812054610a2e90612b97565b612b97565b6000600260ca5414156113525760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff161561137a5760405162461bcd60e51b815260040161092190613aae565b6000611385836120be565b90506113996113926122c6565b85836120f8565b836001600160a01b03166113ab6122c6565b6001600160a01b03167fc8cf4e5d87b5b4ffb59d20991b0840a27d2227ee272dae54bacf0f4b4184bf7785846040516113ee929190918252602082015260400190565b60405180910390a36001915050600160ca5592915050565b61140e6122c6565b6001600160a01b03166114296066546001600160a01b031690565b6001600160a01b03161461144f5760405162461bcd60e51b815260040161092190613b20565b61127e6000612bc0565b6114616122c6565b6001600160a01b031661147c6066546001600160a01b031690565b6001600160a01b0316146114a25760405162461bcd60e51b815260040161092190613b20565b61010180546001810182556000919091527f109ea3cebb188b9c1b9fc5bb3920be60dfdc8699098dff92f3d80daaca7476890180546001600160a01b0319166001600160a01b0392909216919091179055565b600260ca5414156115185760405162461bcd60e51b815260040161092190613a77565b600260ca556000805b6101015481101561158757610101818154811061154057611540613b55565b6000918252602090912001546001600160a01b031661155d6122c6565b6001600160a01b031614156115755760019150611587565b8061157f81613b81565b915050611521565b50806115a55760405162461bcd60e51b815260040161092190613c04565b60985460ff16156115c85760405162461bcd60e51b815260040161092190613aae565b6115d6878787878787612c12565b5050600160ca555050505050565b6115ec6122c6565b6001600160a01b03166116076066546001600160a01b031690565b6001600160a01b03161461162d5760405162461bcd60e51b815260040161092190613b20565b61127e612d0b565b610101818154811061164657600080fd5b6000918252602090912001546001600160a01b0316905081565b600260ca5414156116835760405162461bcd60e51b815260040161092190613a77565b600260ca556000805b610101548110156116f25761010181815481106116ab576116ab613b55565b6000918252602090912001546001600160a01b03166116c86122c6565b6001600160a01b031614156116e057600191506116f2565b806116ea81613b81565b91505061168c565b50806117105760405162461bcd60e51b815260040161092190613c04565b60985460ff16156117335760405162461bcd60e51b815260040161092190613aae565b6117438484846000806000612c12565b5050600160ca555050565b6117566122c6565b6001600160a01b03166117716066546001600160a01b031690565b6001600160a01b0316146117975760405162461bcd60e51b815260040161092190613b20565b61010255565b60606038805461087990613a42565b60fd546001600160a01b0316600090815260ff602081905260408220600301546111d4916113289116600a613d07565b600080603560006117eb6122c6565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156118755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610921565b6118896118806122c6565b858584036122d0565b5060019392505050565b6000610a2a6118a06122c6565b84846120f8565b600054610100900460ff166118c25760005460ff16156118c6565b303b155b6119295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610921565b600054610100900460ff1615801561194b576000805461ffff19166101011790555b611953612d64565b61195b612d9b565b611963612dd2565b6119b2604051806040016040528060118152602001704361736b205661756c7420546f6b656e7360781b8152506040518060400160405280600481526020016309a82a6960e31b815250612e01565b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156119ed57600080fd5b505afa158015611a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a259190613bc9565b60ff1611611a6b5760405162461bcd60e51b815260206004820152601360248201527221494e56414c4944286261736541737365742960681b6044820152606401610921565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611aa657600080fd5b505afa158015611aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ade9190613bc9565b60ff1611611b2e5760405162461bcd60e51b815260206004820152601c60248201527f21494e56414c49442862617365417373657450726963654665656429000000006044820152606401610921565b6001600160a01b03848116600081815260ff602090815260409182902080546001600160a01b031916948816949094178455815163313ce56760e01b8152915163313ce567926004808201939291829003018186803b158015611b9057600080fd5b505afa158015611ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc89190613bc9565b8160030160006101000a81548160ff021916908360ff160217905550836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1d57600080fd5b505afa158015611c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c559190613bc9565b6003820180546000196002850155600060019485018190556201000062ffff001990921661010060ff95909516850262ff000019161791909117909155815492830182559081527f45e010b9ae401e2eb71529478da8bd513a9bdc2d095a111e324f5b95c09ed87b90910180546001600160a01b03199081166001600160a01b0388811691821790935560fd80548316909117905560fe8054909116918516919091179055610102558015611d10576000805461ff00191690555b50505050565b600260ca541415611d395760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff1615611d615760405162461bcd60e51b815260040161092190613aae565b611d6c838383612e3a565b5050600160ca5550565b611d7e6122c6565b6001600160a01b0316611d996066546001600160a01b031690565b6001600160a01b031614611dbf5760405162461bcd60e51b815260040161092190613b20565b60fe80546001600160a01b0319166001600160a01b0392909216919091179055565b60006111d4612fde565b611df36122c6565b6001600160a01b0316611e0e6066546001600160a01b031690565b6001600160a01b031614611e345760405162461bcd60e51b815260040161092190613b20565b603380546001600160a01b0319166001600160a01b03831617905550565b50565b6000610a2e826120be565b600260ca541415611e835760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff1615611eab5760405162461bcd60e51b815260040161092190613aae565b611d6c83838361248d565b611ebe6122c6565b6001600160a01b0316611ed96066546001600160a01b031690565b6001600160a01b031614611eff5760405162461bcd60e51b815260040161092190613b20565b6001600160a01b038116611f645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610921565b611e5281612bc0565b600260ca541415611f905760405162461bcd60e51b815260040161092190613a77565b600260ca5560985460ff1615611fb85760405162461bcd60e51b815260040161092190613aae565b6112dd611fc36122c6565b8383612e3a565b600260ca541415611fed5760405162461bcd60e51b815260040161092190613a77565b600260ca556000805b6101015481101561205c57610101818154811061201557612015613b55565b6000918252602090912001546001600160a01b03166120326122c6565b6001600160a01b0316141561204a576001915061205c565b8061205481613b81565b915050611ff6565b508061207a5760405162461bcd60e51b815260040161092190613c04565b60985460ff161561209d5760405162461bcd60e51b815260040161092190613aae565b6120ac85858585600080612c12565b5050600160ca55505050565b3b151590565b6000806120ca60365490565b11156120ef576120d8612fde565b6036546120e59084613d16565b610a2e9190613d35565b5090565b919050565b6001600160a01b03831661215c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610921565b6001600160a01b0382166121be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610921565b6001600160a01b038316600090815260346020526040902054818110156122365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610921565b6001600160a01b0380851660009081526034602052604080822085850390559185168152908120805484929061226d908490613bec565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122b991815260200190565b60405180910390a3611d10565b60006111d46130e7565b6001600160a01b0383166123325760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610921565b6001600160a01b0382166123935760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610921565b6001600160a01b0383811660008181526035602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60985460ff1661243d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610921565b6098805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124706122c6565b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216600090815260ff6020819052604090912060030154620100009004166124f55760405162461bcd60e51b8152602060048201526013602482015272214e4f545f414c4c4f5745442861737365742960681b6044820152606401610921565b6000811161253d5760405162461bcd60e51b815260206004820152601560248201527421494e56414c4944286173736574416d6f756e742960581b6044820152606401610921565b6001600160a01b038216600090815260ff60205260409020600201548161256384612b1d565b61256d9190613bec565b11156125b35760405162461bcd60e51b8152602060048201526015602482015274214445504f5349545f4c494d49542861737365742960581b6044820152606401610921565b60fd5481906001600160a01b0384811691161461262b576001600160a01b038316600090815260ff602052604081206001810154909190612710906125f89086613d16565b6126029190613d35565b60fd549091506126269086906001600160a01b03166126218488613b9c565b61273e565b925050505b6101025481101561266d5760405162461bcd60e51b815260206004820152600c60248201526b0853525397d1115413d4d25560a21b6044820152606401610921565b80600061267960365490565b11156126be57612687612fde565b600161269260365490565b61269c9085613d16565b6126a69190613b9c565b6126b09190613d35565b6126bb906001613bec565b90505b6126db6126c96122c6565b6001600160a01b03861690308661311b565b6126e58582613186565b60408051848152602081018490529081018290526001600160a01b0380861691908716907fbef68d45f01f5e2c114616dc4840e7a543da6ec57afc5700e4be96056a899b4e906060015b60405180910390a35050505050565b6000826001600160a01b0316846001600160a01b031614156127905760405162461bcd60e51b815260206004820152600b60248201526a0854d0535157d054d4d15560aa1b6044820152606401610921565b6001600160a01b03848116600090815260ff6020526040902054166127ed5760405162461bcd60e51b815260206004820152601360248201527221494e56414c49442866726f6d41737365742960681b6044820152606401610921565b6001600160a01b03838116600090815260ff60205260409020541661284c5760405162461bcd60e51b8152602060048201526015602482015274214e4f545f414c4c4f57454428746f41737365742960581b6044820152606401610921565b81612859575060006110ee565b6001600160a01b03808516600090815260ff6020526040808220548151633fabe5a360e21b815291519293169163feaf968c9160048082019260a092909190829003018186803b1580156128ac57600080fd5b505afa1580156128c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e49190613d71565b5050506001600160a01b03808716600090815260ff602052604090819020548151633fabe5a360e21b815291519395508594509091169163feaf968c9160048082019260a092909190829003018186803b15801561294157600080fd5b505afa158015612955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129799190613d71565b5050506001600160a01b03808816600090815260ff60208190526040808320600390810154948d168452922090910154929550859350610100928390048116929091041614612a92576001600160a01b038616600090815260ff60208190526040909120600301546129f5918391610100810482169116613265565b6001600160a01b03808916600090815260ff60208190526040808320600390810154948c168452922090910154612a3792869261010090910481169116613265565b6001600160a01b03808a16600090815260ff60208190526040808320600390810154948d168452922090910154612a74928a929081169116613265565b612a7e9190613d16565b612a889190613d35565b93505050506110ee565b6001600160a01b03808816600090815260ff60208190526040808320600390810154948b168452922090910154612a889284928692612adc928b9290811691610100900416613265565b612ae69190613d16565b612af09190613d35565b6001600160a01b038816600090815260ff6020819052604090912060030154610100810482169116613265565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015612b5f57600080fd5b505afa158015612b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190613dc1565b6000612ba260365490565b612baa575090565b60365482612bb6612fde565b6120e59190613d16565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000612c1d856120be565b905060008415612c3357612c30856120be565b90505b60008084118015612c4c57506001600160a01b03851615155b15612c5d57612c5a846120be565b90505b612c688989856120f8565b8115612c865760fe54612c869089906001600160a01b0316846120f8565b8015612c9757612c978886836120f8565b6040805188815260208101859052908101879052606081018390526080810185905260a081018290526001600160a01b03808716918a8216918c16907fe231cd9559a5a16d19e2bf003665b108bb05f45a7318361550754822be725a1d9060c00160405180910390a4505050505050505050565b60985460ff1615612d2e5760405162461bcd60e51b815260040161092190613aae565b6098805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124706122c6565b600054610100900460ff16612d8b5760405162461bcd60e51b815260040161092190613dda565b612d936132d6565b61127e6132fd565b600054610100900460ff16612dc25760405162461bcd60e51b815260040161092190613dda565b612dca6132d6565b61127e613334565b600054610100900460ff16612df95760405162461bcd60e51b815260040161092190613dda565b61127e613367565b600054610100900460ff16612e285760405162461bcd60e51b815260040161092190613dda565b612e306132d6565b610b9f8282613395565b6001600160a01b038216600090815260ff602081905260409091206003015462010000900416612ea25760405162461bcd60e51b8152602060048201526013602482015272214e4f545f414c4c4f5745442861737365742960681b6044820152606401610921565b60008111612eeb5760405162461bcd60e51b815260206004820152601660248201527521494e56414c494428736861726573416d6f756e742960501b6044820152606401610921565b6000612ef682612b97565b9050612f09612f036122c6565b836133e3565b60fd5481906001600160a01b03858116911614612f7c576001600160a01b03808516600090815260ff6020526040902060fd549091612f4a9116868561273e565b91506000612710826001015484612f619190613d16565b612f6b9190613d35565b9050612f778184613b9c565b925050505b612f906001600160a01b0385168683613531565b60408051828152602081018490529081018490526001600160a01b0380861691908716907fc90b5405a6805d53680586ef15168b1d791e67ceebe68fa62eefdb81478763cc9060600161272f565b600080805b610100548110156130dc5760fd5461010080546001600160a01b03909216918390811061301257613012613b55565b6000918252602090912001546001600160a01b031614156130535760fd54613042906001600160a01b0316612b1d565b61304c9083613bec565b91506130ca565b6130bd610100828154811061306a5761306a613b55565b60009182526020909120015460fd5461010080546001600160a01b0393841693909216916126219190869081106130a3576130a3613b55565b6000918252602090912001546001600160a01b0316612b1d565b6130c79083613bec565b91505b806130d481613b81565b915050612fe3565b50919050565b505050565b60006014361080159061310457506033546001600160a01b031633145b15613116575060131936013560601c90565b503390565b6040516001600160a01b0380851660248301528316604482015260648101829052611d109085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613561565b6001600160a01b0382166131dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610921565b80603660008282546131ee9190613bec565b90915550506001600160a01b0382166000908152603460205260408120805483929061321b908490613bec565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008160ff168360ff16101561329e5761327f8383613e25565b61328d9060ff16600a613e48565b6132979085613d16565b90506110ee565b8160ff168360ff1611156132ce576132b68284613e25565b6132c49060ff16600a613e48565b6132979085613d35565b509192915050565b600054610100900460ff1661127e5760405162461bcd60e51b815260040161092190613dda565b600054610100900460ff166133245760405162461bcd60e51b815260040161092190613dda565b61127e61332f6122c6565b612bc0565b600054610100900460ff1661335b5760405162461bcd60e51b815260040161092190613dda565b6098805460ff19169055565b600054610100900460ff1661338e5760405162461bcd60e51b815260040161092190613dda565b600160ca55565b600054610100900460ff166133bc5760405162461bcd60e51b815260040161092190613dda565b81516133cf90603790602085019061373e565b5080516130e290603890602084019061373e565b6001600160a01b0382166134435760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610921565b6001600160a01b038216600090815260346020526040902054818110156134b75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610921565b6001600160a01b03831660009081526034602052604081208383039055603680548492906134e6908490613b9c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0383166024820152604481018290526130e290849063a9059cbb60e01b9060640161314f565b60006135b6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166136339092919063ffffffff16565b8051909150156130e257808060200190518101906135d49190613e54565b6130e25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610921565b60606112f3848460008585843b61368c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610921565b600080866001600160a01b031685876040516136a89190613e76565b60006040518083038185875af1925050503d80600081146136e5576040519150601f19603f3d011682016040523d82523d6000602084013e6136ea565b606091505b50915091506136fa828286613705565b979650505050505050565b606083156137145750816110ee565b8251156137245782518084602001fd5b8160405162461bcd60e51b815260040161092191906137fa565b82805461374a90613a42565b90600052602060002090601f01602090048101928261376c57600085556137b2565b82601f1061378557805160ff19168380011785556137b2565b828001600101855582156137b2579182015b828111156137b2578251825591602001919060010190613797565b506120ef9291505b808211156120ef57600081556001016137ba565b60005b838110156137e95781810151838201526020016137d1565b83811115611d105750506000910152565b60208152600082518060208401526138198160408501602087016137ce565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146120f357600080fd5b60008060006060848603121561385957600080fd5b6138628461382d565b92506138706020850161382d565b9150604084013590509250925092565b6000806040838503121561389357600080fd5b61389c8361382d565b946020939093013593505050565b6000602082840312156138bc57600080fd5b6110ee8261382d565b600080600080608085870312156138db57600080fd5b6138e48561382d565b93506138f26020860161382d565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b818110156139485783516001600160a01b031683529284019291840191600101613923565b50909695505050505050565b60008060008060008060c0878903121561396d57600080fd5b6139768761382d565b95506139846020880161382d565b945060408701359350606087013592506139a06080880161382d565b915060a087013590509295509295509295565b6000602082840312156139c557600080fd5b5035919050565b6000806000606084860312156139e157600080fd5b6139ea8461382d565b92506139f86020850161382d565b9150613a066040850161382d565b90509250925092565b60008060408385031215613a2257600080fd5b613a2b8361382d565b9150613a396020840161382d565b90509250929050565b600181811c90821680613a5657607f821691505b602082108114156130dc57634e487b7160e01b600052602260045260246000fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415613b9557613b95613b6b565b5060010190565b600082821015613bae57613bae613b6b565b500390565b634e487b7160e01b600052603160045260246000fd5b600060208284031215613bdb57600080fd5b815160ff811681146110ee57600080fd5b60008219821115613bff57613bff613b6b565b500190565b60208082526005908201526404282aaa8960db1b604082015260600190565b600181815b80851115613c5e578160001904821115613c4457613c44613b6b565b80851615613c5157918102915b93841c9390800290613c28565b509250929050565b600082613c7557506001610a2e565b81613c8257506000610a2e565b8160018114613c985760028114613ca257613cbe565b6001915050610a2e565b60ff841115613cb357613cb3613b6b565b50506001821b610a2e565b5060208310610133831016604e8410600b8410161715613ce1575081810a610a2e565b613ceb8383613c23565b8060001904821115613cff57613cff613b6b565b029392505050565b60006110ee60ff841683613c66565b6000816000190483118215151615613d3057613d30613b6b565b500290565b600082613d5257634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff811681146120f357600080fd5b600080600080600060a08688031215613d8957600080fd5b613d9286613d57565b9450602086015193506040860151925060608601519150613db560808701613d57565b90509295509295909350565b600060208284031215613dd357600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060ff821660ff841680821015613e3f57613e3f613b6b565b90039392505050565b60006110ee8383613c66565b600060208284031215613e6657600080fd5b815180151581146110ee57600080fd5b60008251613e888184602087016137ce565b919091019291505056fea2646970667358221220bfad87f341766b51e023e5e5ae3185bfcee4b50a1a5b88e2e9f4d6dd4f5e2d0064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowAsset(address,address,uint256,uint256)": {
        "details": "Add an allowed asset to be deposited into the vault",
        "params": {
          "_asset": "Address of new ERC20 asset",
          "_priceFeed": "Address of a chainlink-compatible price oracle for the asset",
          "_slippageBps": "Slippage basis points to use when depositing/withdrawing this asset"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "currentValueOf(address)": {
        "details": "Get current vault value of `_address` denominated in `baseAsset`",
        "params": {
          "_address": "Address to check"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(address,uint256)": {
        "details": "Deposit an amount of `_asset` into the vault and credit the equal value of `baseAsset`",
        "params": {
          "_asset": "Address of incoming asset",
          "_assetAmount": "Amount of asset to deposit"
        }
      },
      "depositTo(address,address,uint256)": {
        "details": "Deposit an amount of `_asset` into the vault and credit the equal value of `baseAsset`",
        "params": {
          "_asset": "Address of incoming asset",
          "_assetAmount": "Amount of asset to deposit",
          "_to": "Recipient of funds"
        }
      },
      "disallowAsset(address)": {
        "details": "Mark an already allowed asset to no longer be allowed for deposits/withdraws",
        "params": {
          "_asset": "Address of new ERC20 asset"
        }
      },
      "getAllAssets()": {
        "details": "Get all the assets supported by the vault."
      },
      "getAsset(address)": {
        "details": "Get asset details",
        "params": {
          "_asset": "Asset address"
        },
        "returns": {
          "_0": "Asset Asset details"
        }
      },
      "getBaseAsset()": {
        "details": "Get base asset of vault."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "pricePerShare()": {
        "details": "Get current vault value a vault share"
      },
      "protocolPayment(address,address,uint256)": {
        "details": "Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol",
        "params": {
          "_from": "From address",
          "_to": "To address",
          "_value": "Amount of baseAsset value to transfer"
        }
      },
      "protocolPayment(address,address,uint256,uint256)": {
        "details": "Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol",
        "params": {
          "_from": "From address",
          "_protocolFee": "Protocol fee to deduct from `_value`",
          "_to": "To address",
          "_value": "Amount of baseAsset value to transfer"
        }
      },
      "protocolPayment(address,address,uint256,uint256,address,uint256)": {
        "details": "Pay `_value` of `baseAsset` from `_from` to `_to` initiated by an authorized protocol",
        "params": {
          "_from": "From address",
          "_network": "Address of network fee collector",
          "_networkFee": "Network fee to deduct from `_value`",
          "_protocolFee": "Protocol fee to deduct from `_value`",
          "_to": "To address",
          "_value": "Amount of baseAsset value to transfer"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "sharesForValue(uint256)": {
        "details": "Get the number of vault shares that represents a given value of the base asset",
        "params": {
          "_value": "Amount of value"
        }
      },
      "supportsAsset(address)": {
        "details": "Check if the vault supports an asset",
        "params": {
          "_asset": "Asset address"
        },
        "returns": {
          "_0": "bool `true` if asset supported, `false` otherwise"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalAssetBalance(address)": {
        "details": "Get total amount of an asset held in vault and managed by admin",
        "params": {
          "_asset": "Address of asset"
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalValue()": {
        "details": "Get total value in vault and managed by admin - denominated in `baseAsset`"
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferValue(address,uint256)": {
        "details": "Transfer the equivalent vault shares of base asset `value` to `_recipient`",
        "params": {
          "_recipient": "To address",
          "_value": "Amount of baseAsset value to transfer"
        }
      },
      "transferValueFrom(address,address,uint256)": {
        "details": "Transfer the equivalent vault shares of base asset `value` from `_sender` to `_recipient`",
        "params": {
          "_recipient": "To address",
          "_sender": "From address",
          "_value": "Amount of baseAsset value to transfer"
        }
      },
      "withdraw(address,uint256)": {
        "details": "Withdraw an amount of shares from the vault in the form of `_asset`",
        "params": {
          "_asset": "Address of outgoing asset",
          "_shares": "Amount of shares to withdraw"
        }
      },
      "withdrawTo(address,address,uint256)": {
        "details": "Withdraw an amount of shares from the vault in the form of `_asset`",
        "params": {
          "_asset": "Address of outgoing asset",
          "_recipient": "Recipient who will receive the withdrawn assets",
          "_shares": "Amount of shares to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 327,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 330,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2551,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 584,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_balances",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 590,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_allowances",
        "offset": 0,
        "slot": "53",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 592,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "54",
        "type": "t_uint256"
      },
      {
        "astId": 594,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_name",
        "offset": 0,
        "slot": "55",
        "type": "t_string_storage"
      },
      {
        "astId": 596,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_symbol",
        "offset": 0,
        "slot": "56",
        "type": "t_string_storage"
      },
      {
        "astId": 1137,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "__gap",
        "offset": 0,
        "slot": "57",
        "type": "t_array(t_uint256)45_storage"
      },
      {
        "astId": 205,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_owner",
        "offset": 0,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 319,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "__gap",
        "offset": 0,
        "slot": "103",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 415,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_paused",
        "offset": 0,
        "slot": "152",
        "type": "t_bool"
      },
      {
        "astId": 506,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "__gap",
        "offset": 0,
        "slot": "153",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 521,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "_status",
        "offset": 0,
        "slot": "202",
        "type": "t_uint256"
      },
      {
        "astId": 564,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "__gap",
        "offset": 0,
        "slot": "203",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 13488,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "reserved1",
        "offset": 0,
        "slot": "252",
        "type": "t_address"
      },
      {
        "astId": 13490,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "baseAsset",
        "offset": 0,
        "slot": "253",
        "type": "t_address"
      },
      {
        "astId": 13492,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "feeDistributor",
        "offset": 0,
        "slot": "254",
        "type": "t_address"
      },
      {
        "astId": 13497,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "assets",
        "offset": 0,
        "slot": "255",
        "type": "t_mapping(t_address,t_struct(Asset)7817_storage)"
      },
      {
        "astId": 13500,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "allAssets",
        "offset": 0,
        "slot": "256",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13503,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "protocols",
        "offset": 0,
        "slot": "257",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13505,
        "contract": "contracts/vault/CaskVault.sol:CaskVault",
        "label": "minDeposit",
        "offset": 0,
        "slot": "258",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)45_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[45]",
        "numberOfBytes": "1440"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Asset)7817_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ICaskVault.Asset)",
        "numberOfBytes": "32",
        "value": "t_struct(Asset)7817_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Asset)7817_storage": {
        "encoding": "inplace",
        "label": "struct ICaskVault.Asset",
        "members": [
          {
            "astId": 7806,
            "contract": "contracts/vault/CaskVault.sol:CaskVault",
            "label": "priceFeed",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7808,
            "contract": "contracts/vault/CaskVault.sol:CaskVault",
            "label": "slippageBps",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7810,
            "contract": "contracts/vault/CaskVault.sol:CaskVault",
            "label": "depositLimit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7812,
            "contract": "contracts/vault/CaskVault.sol:CaskVault",
            "label": "assetDecimals",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 7814,
            "contract": "contracts/vault/CaskVault.sol:CaskVault",
            "label": "priceFeedDecimals",
            "offset": 1,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 7816,
            "contract": "contracts/vault/CaskVault.sol:CaskVault",
            "label": "allowed",
            "offset": 2,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}