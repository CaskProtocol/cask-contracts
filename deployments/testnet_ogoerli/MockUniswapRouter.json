{
  "address": "0x12eDd08B98857dC6Ced8463A834749235Be016b1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_0tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_1tokens",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pairMaps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_outputBps",
          "type": "uint256"
        }
      ],
      "name": "setOutputBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x69fdad2f3d91fd917fcb8b2f9a05658580cb2c4eb6f69338f37e809ab1697647",
  "receipt": {
    "to": null,
    "from": "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0",
    "contractAddress": "0x12eDd08B98857dC6Ced8463A834749235Be016b1",
    "transactionIndex": 0,
    "gasUsed": "678113",
    "logsBloom": "0x
    "blockHash": "0x94dee0b68ff34c24e93b699b693f5c2a0a876b5466a7c46a1357e5bf3a17a388",
    "transactionHash": "0x69fdad2f3d91fd917fcb8b2f9a05658580cb2c4eb6f69338f37e809ab1697647",
    "logs": [],
    "blockNumber": 592765,
    "cumulativeGasUsed": "678113",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "35ebfac38dd386533b79c1a93a89ca49",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_0tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_1tokens\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pairMaps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputBps\",\"type\":\"uint256\"}],\"name\":\"setOutputBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockUniswapRouter.sol\":\"MockUniswapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/mocks/MockUniswapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ncontract MockUniswapRouter {\\n\\n    mapping(address => address) public pairMaps;\\n    uint256 outputBps;\\n\\n    function initialize(\\n        address[] calldata _0tokens,\\n        address[] calldata _1tokens\\n    ) public {\\n        require(\\n            _0tokens.length == _1tokens.length,\\n            \\\"Mock token pairs should be of the same length\\\"\\n        );\\n        for (uint256 i = 0; i < _0tokens.length; i++) {\\n            pairMaps[_0tokens[i]] = _1tokens[i];\\n        }\\n        outputBps = 10000; // by default output the same as the input\\n    }\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory) {\\n        address tok0 = path[0];\\n        address tok1 = pairMaps[tok0];\\n        // Give 1:1\\n        uint256 amountOut = _scaleBy(amountIn, IERC20Metadata(tok1).decimals(), IERC20Metadata(tok0).decimals());\\n        amountOut = amountOut * outputBps / 10000;\\n\\n        require(amountOut >= amountOutMin, \\\"Slippage error\\\");\\n        require(deadline > block.timestamp);\\n\\n        IERC20Metadata(tok0).transferFrom(msg.sender, address(this), amountIn);\\n        IERC20Metadata(tok1).transfer(to, amountOut);\\n\\n        uint256[] memory amounts = new uint256[](2);\\n        amounts[0] = amountIn;\\n        amounts[1] = amountOut;\\n\\n        return amounts;\\n    }\\n\\n    function getAmountsOut(\\n        uint256 amountIn,\\n        address[] memory path\\n    ) external view returns (uint256[] memory) {\\n        address tok0 = path[0];\\n        address tok1 = pairMaps[tok0];\\n        // Give 1:1\\n        uint256 amountOut = _scaleBy(amountIn, IERC20Metadata(tok1).decimals(), IERC20Metadata(tok0).decimals());\\n        amountOut = amountOut * outputBps / 10000;\\n\\n        uint256[] memory amounts = new uint256[](2);\\n        amounts[0] = amountIn;\\n        amounts[1] = amountOut;\\n\\n        return amounts;\\n    }\\n\\n    function setOutputBps(\\n        uint256 _outputBps\\n    ) external {\\n        outputBps = _outputBps;\\n    }\\n\\n    function _scaleBy(\\n        uint256 x,\\n        uint256 to,\\n        uint256 from\\n    ) internal pure returns (uint256) {\\n        if (to > from) {\\n            return x * (10**(to - from));\\n        } else if (to < from) {\\n            return x / (10**(from - to));\\n        } else {\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba64c374c6923acd36958608c8df46a44f1228251baf36078c3a94e9b98fc4fb\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b4f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806338ed17391461005c5780635677089e146100855780636655524c1461009a57806373cf25f8146100db578063d06ca61f146100ee575b600080fd5b61006f61006a36600461070a565b610101565b60405161007c919061077a565b60405180910390f35b6100986100933660046107be565b600155565b005b6100c36100a83660046107d7565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6100986100e93660046107f2565b610425565b61006f6100fc366004610874565b610536565b606060008585600081811061011857610118610945565b905060200201602081019061012d91906107d7565b6001600160a01b0380821660009081526020818152604080832054815163313ce56760e01b8152915195965090931693919261023c928d92869263313ce5679260048083019392829003018186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c0919061095b565b60ff16856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101fc57600080fd5b505afa158015610210573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610234919061095b565b60ff16610641565b90506127106001548261024f9190610994565b61025991906109b3565b9050888110156102a15760405162461bcd60e51b815260206004820152600e60248201526d29b634b83830b3b29032b93937b960911b60448201526064015b60405180910390fd5b4285116102ad57600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018b90526001600160a01b038416906323b872dd90606401602060405180830381600087803b1580156102fb57600080fd5b505af115801561030f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033391906109d5565b5060405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b691906109d5565b506040805160028082526060820183526000926020830190803683370190505090508a816000815181106103ec576103ec610945565b602002602001018181525050818160018151811061040c5761040c610945565b60209081029190910101529a9950505050505050505050565b82811461048a5760405162461bcd60e51b815260206004820152602d60248201527f4d6f636b20746f6b656e2070616972732073686f756c64206265206f6620746860448201526c0ca40e6c2daca40d8cadccee8d609b1b6064820152608401610298565b60005b83811015610529578282828181106104a7576104a7610945565b90506020020160208101906104bc91906107d7565b6000808787858181106104d1576104d1610945565b90506020020160208101906104e691906107d7565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610521816109f7565b91505061048d565b5050612710600155505050565b606060008260008151811061054d5761054d610945565b6020908102919091018101516001600160a01b038082166000908152808452604080822054815163313ce56760e01b815291519496509092169390926105b3928992869263313ce567926004808201939291829003018186803b15801561018857600080fd5b9050612710600154826105c69190610994565b6105d091906109b3565b6040805160028082526060820183529293506000929091602083019080368337019050509050868160008151811061060a5761060a610945565b602002602001018181525050818160018151811061062a5761062a610945565b602090810291909101015293505050505b92915050565b600081831115610671576106558284610a12565b61066090600a610b0d565b61066a9085610994565b905061069b565b81831015610698576106838383610a12565b61068e90600a610b0d565b61066a90856109b3565b50825b9392505050565b60008083601f8401126106b457600080fd5b50813567ffffffffffffffff8111156106cc57600080fd5b6020830191508360208260051b85010111156106e757600080fd5b9250929050565b80356001600160a01b038116811461070557600080fd5b919050565b60008060008060008060a0878903121561072357600080fd5b8635955060208701359450604087013567ffffffffffffffff81111561074857600080fd5b61075489828a016106a2565b90955093506107679050606088016106ee565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b818110156107b257835183529284019291840191600101610796565b50909695505050505050565b6000602082840312156107d057600080fd5b5035919050565b6000602082840312156107e957600080fd5b61069b826106ee565b6000806000806040858703121561080857600080fd5b843567ffffffffffffffff8082111561082057600080fd5b61082c888389016106a2565b9096509450602087013591508082111561084557600080fd5b50610852878288016106a2565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561088757600080fd5b8235915060208084013567ffffffffffffffff808211156108a757600080fd5b818601915086601f8301126108bb57600080fd5b8135818111156108cd576108cd61085e565b8060051b604051601f19603f830116810181811085821117156108f2576108f261085e565b60405291825284820192508381018501918983111561091057600080fd5b938501935b8285101561093557610926856106ee565b84529385019392850192610915565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561096d57600080fd5b815160ff8116811461069b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156109ae576109ae61097e565b500290565b6000826109d057634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109e757600080fd5b8151801515811461069b57600080fd5b6000600019821415610a0b57610a0b61097e565b5060010190565b600082821015610a2457610a2461097e565b500390565b600181815b80851115610a64578160001904821115610a4a57610a4a61097e565b80851615610a5757918102915b93841c9390800290610a2e565b509250929050565b600082610a7b5750600161063b565b81610a885750600061063b565b8160018114610a9e5760028114610aa857610ac4565b600191505061063b565b60ff841115610ab957610ab961097e565b50506001821b61063b565b5060208310610133831016604e8410600b8410161715610ae7575081810a61063b565b610af18383610a29565b8060001904821115610b0557610b0561097e565b029392505050565b600061069b8383610a6c56fea264697066735822122043964f568a3e8d8d899323e2be4c253293a5c794ff94a239180ace9345fa10f664736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806338ed17391461005c5780635677089e146100855780636655524c1461009a57806373cf25f8146100db578063d06ca61f146100ee575b600080fd5b61006f61006a36600461070a565b610101565b60405161007c919061077a565b60405180910390f35b6100986100933660046107be565b600155565b005b6100c36100a83660046107d7565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6100986100e93660046107f2565b610425565b61006f6100fc366004610874565b610536565b606060008585600081811061011857610118610945565b905060200201602081019061012d91906107d7565b6001600160a01b0380821660009081526020818152604080832054815163313ce56760e01b8152915195965090931693919261023c928d92869263313ce5679260048083019392829003018186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c0919061095b565b60ff16856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101fc57600080fd5b505afa158015610210573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610234919061095b565b60ff16610641565b90506127106001548261024f9190610994565b61025991906109b3565b9050888110156102a15760405162461bcd60e51b815260206004820152600e60248201526d29b634b83830b3b29032b93937b960911b60448201526064015b60405180910390fd5b4285116102ad57600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018b90526001600160a01b038416906323b872dd90606401602060405180830381600087803b1580156102fb57600080fd5b505af115801561030f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033391906109d5565b5060405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b691906109d5565b506040805160028082526060820183526000926020830190803683370190505090508a816000815181106103ec576103ec610945565b602002602001018181525050818160018151811061040c5761040c610945565b60209081029190910101529a9950505050505050505050565b82811461048a5760405162461bcd60e51b815260206004820152602d60248201527f4d6f636b20746f6b656e2070616972732073686f756c64206265206f6620746860448201526c0ca40e6c2daca40d8cadccee8d609b1b6064820152608401610298565b60005b83811015610529578282828181106104a7576104a7610945565b90506020020160208101906104bc91906107d7565b6000808787858181106104d1576104d1610945565b90506020020160208101906104e691906107d7565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610521816109f7565b91505061048d565b5050612710600155505050565b606060008260008151811061054d5761054d610945565b6020908102919091018101516001600160a01b038082166000908152808452604080822054815163313ce56760e01b815291519496509092169390926105b3928992869263313ce567926004808201939291829003018186803b15801561018857600080fd5b9050612710600154826105c69190610994565b6105d091906109b3565b6040805160028082526060820183529293506000929091602083019080368337019050509050868160008151811061060a5761060a610945565b602002602001018181525050818160018151811061062a5761062a610945565b602090810291909101015293505050505b92915050565b600081831115610671576106558284610a12565b61066090600a610b0d565b61066a9085610994565b905061069b565b81831015610698576106838383610a12565b61068e90600a610b0d565b61066a90856109b3565b50825b9392505050565b60008083601f8401126106b457600080fd5b50813567ffffffffffffffff8111156106cc57600080fd5b6020830191508360208260051b85010111156106e757600080fd5b9250929050565b80356001600160a01b038116811461070557600080fd5b919050565b60008060008060008060a0878903121561072357600080fd5b8635955060208701359450604087013567ffffffffffffffff81111561074857600080fd5b61075489828a016106a2565b90955093506107679050606088016106ee565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b818110156107b257835183529284019291840191600101610796565b50909695505050505050565b6000602082840312156107d057600080fd5b5035919050565b6000602082840312156107e957600080fd5b61069b826106ee565b6000806000806040858703121561080857600080fd5b843567ffffffffffffffff8082111561082057600080fd5b61082c888389016106a2565b9096509450602087013591508082111561084557600080fd5b50610852878288016106a2565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561088757600080fd5b8235915060208084013567ffffffffffffffff808211156108a757600080fd5b818601915086601f8301126108bb57600080fd5b8135818111156108cd576108cd61085e565b8060051b604051601f19603f830116810181811085821117156108f2576108f261085e565b60405291825284820192508381018501918983111561091057600080fd5b938501935b8285101561093557610926856106ee565b84529385019392850192610915565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561096d57600080fd5b815160ff8116811461069b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156109ae576109ae61097e565b500290565b6000826109d057634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109e757600080fd5b8151801515811461069b57600080fd5b6000600019821415610a0b57610a0b61097e565b5060010190565b600082821015610a2457610a2461097e565b500390565b600181815b80851115610a64578160001904821115610a4a57610a4a61097e565b80851615610a5757918102915b93841c9390800290610a2e565b509250929050565b600082610a7b5750600161063b565b81610a885750600061063b565b8160018114610a9e5760028114610aa857610ac4565b600191505061063b565b60ff841115610ab957610ab961097e565b50506001821b61063b565b5060208310610133831016604e8410600b8410161715610ae7575081810a61063b565b610af18383610a29565b8060001904821115610b0557610b0561097e565b029392505050565b600061069b8383610a6c56fea264697066735822122043964f568a3e8d8d899323e2be4c253293a5c794ff94a239180ace9345fa10f664736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14693,
        "contract": "contracts/mocks/MockUniswapRouter.sol:MockUniswapRouter",
        "label": "pairMaps",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 14695,
        "contract": "contracts/mocks/MockUniswapRouter.sol:MockUniswapRouter",
        "label": "outputBps",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}