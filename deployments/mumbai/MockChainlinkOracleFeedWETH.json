{
  "address": "0x84a066Ce951cf39206Dc978E84F8257F71A3bf77",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x832635d9f87c6f85f69857cd4b4b5ca595364843a519037f35e174341065214c",
  "receipt": {
    "to": null,
    "from": "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0",
    "contractAddress": "0x84a066Ce951cf39206Dc978E84F8257F71A3bf77",
    "transactionIndex": 8,
    "gasUsed": "249451",
    "logsBloom": "0x
    "blockHash": "0x5712aed811e2ae7a654a4f897b31827b82be50da903c2c55d6d9793aaac84c66",
    "transactionHash": "0x832635d9f87c6f85f69857cd4b4b5ca595364843a519037f35e174341065214c",
    "logs": [
      {
        "transactionIndex": 8,
        "blockNumber": 24137127,
        "transactionHash": "0x832635d9f87c6f85f69857cd4b4b5ca595364843a519037f35e174341065214c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000083e50cd4123baa60f6d6c8a83ca85ac72e826bd0",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000716feb1d8cb130000000000000000000000000000000000000000000000000b6c3a0107ab400000000000000000000000000000000000000000000000051fdef7f5661914b8ab0000000000000000000000000000000000000000000000000b65230255d274ed00000000000000000000000000000000000000000000051fdeff0c64caed83be",
        "logIndex": 16,
        "blockHash": "0x5712aed811e2ae7a654a4f897b31827b82be50da903c2c55d6d9793aaac84c66"
      }
    ],
    "blockNumber": 24137127,
    "cumulativeGasUsed": "599739",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "300000000000",
    8
  ],
  "solcInputHash": "10b1309b3c64d8166f5ed744d49d198f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockChainlinkOracleFeed.sol\":\"MockChainlinkOracleFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/mocks/MockChainlinkOracleFeed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract MockChainlinkOracleFeed is AggregatorV3Interface {\\n    int256 price;\\n    uint8 numDecimals;\\n\\n    constructor(int256 _price, uint8 _decimals) {\\n        price = _price;\\n        numDecimals = _decimals;\\n    }\\n\\n    function decimals() external view override returns (uint8) {\\n        return numDecimals;\\n    }\\n\\n    function description() external pure override returns (string memory) {\\n        return \\\"MockOracleEthFeed\\\";\\n    }\\n\\n    function version() external pure override returns (uint256) {\\n        return 1;\\n    }\\n\\n    function setPrice(int256 _price) public {\\n        price = _price;\\n    }\\n\\n    function setDecimals(uint8 _decimals) public {\\n        numDecimals = _decimals;\\n    }\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    override\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    )\\n    {\\n        roundId = _roundId;\\n        answer = price;\\n        startedAt = 0;\\n        updatedAt = 0;\\n        answeredInRound = 0;\\n    }\\n\\n    function latestRoundData()\\n    external\\n    view\\n    override\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    )\\n    {\\n        roundId = 0;\\n        answer = price;\\n        startedAt = 0;\\n        updatedAt = 0;\\n        answeredInRound = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x6d34cd8f81d4358418b9eea4d296fa6aac92ea0e5edf3e66badfd30e0554862e\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161034838038061034883398101604081905261002f9161004d565b6000919091556001805460ff191660ff909216919091179055610083565b6000806040838503121561006057600080fd5b82519150602083015160ff8116811461007857600080fd5b809150509250929050565b6102b6806100926000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637a1395aa1161005b5780637a1395aa146100ea5780639a6fc8f51461012e578063f7a308061461017f578063feaf968c1461019257600080fd5b8063313ce5671461008257806354fd4d501461009c5780637284e416146100ab575b600080fd5b60015460405160ff90911681526020015b60405180910390f35b60405160018152602001610093565b604080518082018252601181527f4d6f636b4f7261636c654574684665656400000000000000000000000000000060208201529051610093919061019e565b61012c6100f8366004610211565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b005b61014861013c36600461023b565b60008054919281908190565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610093565b61012c61018d366004610267565b600055565b60008054818080610148565b600060208083528351808285015260005b818110156101cb578581018301518582016040015282016101af565b818111156101dd576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561022357600080fd5b813560ff8116811461023457600080fd5b9392505050565b60006020828403121561024d57600080fd5b813569ffffffffffffffffffff8116811461023457600080fd5b60006020828403121561027957600080fd5b503591905056fea2646970667358221220ed35517740e59a1abc9aaa3093d8673f9b17911efbaa8a4a4b9b7d4f61090f8264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637a1395aa1161005b5780637a1395aa146100ea5780639a6fc8f51461012e578063f7a308061461017f578063feaf968c1461019257600080fd5b8063313ce5671461008257806354fd4d501461009c5780637284e416146100ab575b600080fd5b60015460405160ff90911681526020015b60405180910390f35b60405160018152602001610093565b604080518082018252601181527f4d6f636b4f7261636c654574684665656400000000000000000000000000000060208201529051610093919061019e565b61012c6100f8366004610211565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b005b61014861013c36600461023b565b60008054919281908190565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610093565b61012c61018d366004610267565b600055565b60008054818080610148565b600060208083528351808285015260005b818110156101cb578581018301518582016040015282016101af565b818111156101dd576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561022357600080fd5b813560ff8116811461023457600080fd5b9392505050565b60006020828403121561024d57600080fd5b813569ffffffffffffffffffff8116811461023457600080fd5b60006020828403121561027957600080fd5b503591905056fea2646970667358221220ed35517740e59a1abc9aaa3093d8673f9b17911efbaa8a4a4b9b7d4f61090f8264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7255,
        "contract": "contracts/mocks/MockChainlinkOracleFeed.sol:MockChainlinkOracleFeed",
        "label": "price",
        "offset": 0,
        "slot": "0",
        "type": "t_int256"
      },
      {
        "astId": 7257,
        "contract": "contracts/mocks/MockChainlinkOracleFeed.sol:MockChainlinkOracleFeed",
        "label": "numDecimals",
        "offset": 0,
        "slot": "1",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}