{
  "address": "0xE1Dd1726dA8807c7b1575A11146a9721e18515Cd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_outputBps",
          "type": "uint256"
        }
      ],
      "name": "setOutputBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfdd5e9d87a3a9ac8f801577ac916193929d85b1e0c27cd5393cac2e4a6d10f01",
  "receipt": {
    "to": null,
    "from": "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0",
    "contractAddress": "0xE1Dd1726dA8807c7b1575A11146a9721e18515Cd",
    "transactionIndex": 5,
    "gasUsed": "570287",
    "logsBloom": "0x
    "blockHash": "0x340fab2ecba31c7f71c3bd1118ba5fd149ecb8f5235ac7022debf5e69cf1080c",
    "transactionHash": "0xfdd5e9d87a3a9ac8f801577ac916193929d85b1e0c27cd5393cac2e4a6d10f01",
    "logs": [],
    "blockNumber": 1034389,
    "cumulativeGasUsed": "1092229",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "fcb51b29bd54e4f8f52dd99de5e12241",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputBps\",\"type\":\"uint256\"}],\"name\":\"setOutputBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockUniswapRouter.sol\":\"MockUniswapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/mocks/MockUniswapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ncontract MockUniswapRouter {\\n\\n    uint256 outputBps;\\n\\n    function initialize() public {\\n        outputBps = 10000; // by default output the same as the input\\n    }\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory) {\\n        address tok0 = path[0];\\n        address tok1 = path[1];\\n        // Give based on outputBps\\n        uint256 amountOut = _scaleBy(amountIn, IERC20Metadata(tok1).decimals(), IERC20Metadata(tok0).decimals());\\n        amountOut = amountOut * outputBps / 10000;\\n\\n        require(amountOut >= amountOutMin, \\\"Slippage error\\\");\\n        require(deadline > block.timestamp);\\n\\n        IERC20Metadata(tok0).transferFrom(msg.sender, address(this), amountIn);\\n        IERC20Metadata(tok1).transfer(to, amountOut);\\n\\n        uint256[] memory amounts = new uint256[](2);\\n        amounts[0] = amountIn;\\n        amounts[1] = amountOut;\\n\\n        return amounts;\\n    }\\n\\n    function getAmountsOut(\\n        uint256 amountIn,\\n        address[] memory path\\n    ) external view returns (uint256[] memory) {\\n        address tok0 = path[0];\\n        address tok1 = path[1];\\n        // Give based on outputBps\\n        uint256 amountOut = _scaleBy(amountIn, IERC20Metadata(tok1).decimals(), IERC20Metadata(tok0).decimals());\\n        amountOut = amountOut * outputBps / 10000;\\n\\n        uint256[] memory amounts = new uint256[](2);\\n        amounts[0] = amountIn;\\n        amounts[1] = amountOut;\\n\\n        return amounts;\\n    }\\n\\n    function setOutputBps(\\n        uint256 _outputBps\\n    ) external {\\n        outputBps = _outputBps;\\n    }\\n\\n    function _scaleBy(\\n        uint256 x,\\n        uint256 to,\\n        uint256 from\\n    ) internal pure returns (uint256) {\\n        if (to > from) {\\n            return x * (10**(to - from));\\n        } else if (to < from) {\\n            return x / (10**(from - to));\\n        } else {\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6c9635db6ba27a5a2f1eff29d13d4b29791165e92aa5e0bd9a15d2715ce1fdcb\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061095c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338ed1739146100515780635677089e1461007a5780638129fc1c1461008f578063d06ca61f1461009a575b600080fd5b61006461005f36600461056c565b6100ad565b604051610071919061060e565b60405180910390f35b61008d610088366004610652565b600055565b005b61008d612710600055565b6100646100a8366004610681565b6103e2565b60606000858560008181106100c4576100c4610752565b90506020020160208101906100d99190610768565b90506000868660018181106100f0576100f0610752565b90506020020160208101906101059190610768565b905060006101fa8a836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561014657600080fd5b505afa15801561015a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017e9190610783565b60ff16856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ba57600080fd5b505afa1580156101ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f29190610783565b60ff166104ef565b90506127106000548261020d91906107bc565b61021791906107db565b90508881101561025e5760405162461bcd60e51b815260206004820152600e60248201526d29b634b83830b3b29032b93937b960911b604482015260640160405180910390fd5b42851161026a57600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018b90526001600160a01b038416906323b872dd90606401602060405180830381600087803b1580156102b857600080fd5b505af11580156102cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f091906107fd565b5060405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037391906107fd565b506040805160028082526060820183526000926020830190803683370190505090508a816000815181106103a9576103a9610752565b60200260200101818152505081816001815181106103c9576103c9610752565b60209081029190910101529a9950505050505050505050565b60606000826000815181106103f9576103f9610752565b6020026020010151905060008360018151811061041857610418610752565b60200260200101519050600061046186836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561014657600080fd5b90506127106000548261047491906107bc565b61047e91906107db565b604080516002808252606082018352929350600092909160208301908036833701905050905086816000815181106104b8576104b8610752565b60200260200101818152505081816001815181106104d8576104d8610752565b602090810291909101015293505050505b92915050565b60008183111561051f57610503828461081f565b61050e90600a61091a565b61051890856107bc565b9050610549565b8183101561054657610531838361081f565b61053c90600a61091a565b61051890856107db565b50825b9392505050565b80356001600160a01b038116811461056757600080fd5b919050565b60008060008060008060a0878903121561058557600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156105ab57600080fd5b818901915089601f8301126105bf57600080fd5b8135818111156105ce57600080fd5b8a60208260051b85010111156105e357600080fd5b6020830196508095505050506105fb60608801610550565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b818110156106465783518352928401929184019160010161062a565b50909695505050505050565b60006020828403121561066457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561069457600080fd5b8235915060208084013567ffffffffffffffff808211156106b457600080fd5b818601915086601f8301126106c857600080fd5b8135818111156106da576106da61066b565b8060051b604051601f19603f830116810181811085821117156106ff576106ff61066b565b60405291825284820192508381018501918983111561071d57600080fd5b938501935b828510156107425761073385610550565b84529385019392850192610722565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561077a57600080fd5b61054982610550565b60006020828403121561079557600080fd5b815160ff8116811461054957600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156107d6576107d66107a6565b500290565b6000826107f857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561080f57600080fd5b8151801515811461054957600080fd5b600082821015610831576108316107a6565b500390565b600181815b80851115610871578160001904821115610857576108576107a6565b8085161561086457918102915b93841c939080029061083b565b509250929050565b600082610888575060016104e9565b81610895575060006104e9565b81600181146108ab57600281146108b5576108d1565b60019150506104e9565b60ff8411156108c6576108c66107a6565b50506001821b6104e9565b5060208310610133831016604e8410600b84101617156108f4575081810a6104e9565b6108fe8383610836565b8060001904821115610912576109126107a6565b029392505050565b6000610549838361087956fea2646970667358221220b4e710131c996d6a0b6e0ccda11d178d1a6727634e7f2f60803c17405be2846e64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806338ed1739146100515780635677089e1461007a5780638129fc1c1461008f578063d06ca61f1461009a575b600080fd5b61006461005f36600461056c565b6100ad565b604051610071919061060e565b60405180910390f35b61008d610088366004610652565b600055565b005b61008d612710600055565b6100646100a8366004610681565b6103e2565b60606000858560008181106100c4576100c4610752565b90506020020160208101906100d99190610768565b90506000868660018181106100f0576100f0610752565b90506020020160208101906101059190610768565b905060006101fa8a836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561014657600080fd5b505afa15801561015a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017e9190610783565b60ff16856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ba57600080fd5b505afa1580156101ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f29190610783565b60ff166104ef565b90506127106000548261020d91906107bc565b61021791906107db565b90508881101561025e5760405162461bcd60e51b815260206004820152600e60248201526d29b634b83830b3b29032b93937b960911b604482015260640160405180910390fd5b42851161026a57600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018b90526001600160a01b038416906323b872dd90606401602060405180830381600087803b1580156102b857600080fd5b505af11580156102cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f091906107fd565b5060405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037391906107fd565b506040805160028082526060820183526000926020830190803683370190505090508a816000815181106103a9576103a9610752565b60200260200101818152505081816001815181106103c9576103c9610752565b60209081029190910101529a9950505050505050505050565b60606000826000815181106103f9576103f9610752565b6020026020010151905060008360018151811061041857610418610752565b60200260200101519050600061046186836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561014657600080fd5b90506127106000548261047491906107bc565b61047e91906107db565b604080516002808252606082018352929350600092909160208301908036833701905050905086816000815181106104b8576104b8610752565b60200260200101818152505081816001815181106104d8576104d8610752565b602090810291909101015293505050505b92915050565b60008183111561051f57610503828461081f565b61050e90600a61091a565b61051890856107bc565b9050610549565b8183101561054657610531838361081f565b61053c90600a61091a565b61051890856107db565b50825b9392505050565b80356001600160a01b038116811461056757600080fd5b919050565b60008060008060008060a0878903121561058557600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156105ab57600080fd5b818901915089601f8301126105bf57600080fd5b8135818111156105ce57600080fd5b8a60208260051b85010111156105e357600080fd5b6020830196508095505050506105fb60608801610550565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b818110156106465783518352928401929184019160010161062a565b50909695505050505050565b60006020828403121561066457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561069457600080fd5b8235915060208084013567ffffffffffffffff808211156106b457600080fd5b818601915086601f8301126106c857600080fd5b8135818111156106da576106da61066b565b8060051b604051601f19603f830116810181811085821117156106ff576106ff61066b565b60405291825284820192508381018501918983111561071d57600080fd5b938501935b828510156107425761073385610550565b84529385019392850192610722565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561077a57600080fd5b61054982610550565b60006020828403121561079557600080fd5b815160ff8116811461054957600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156107d6576107d66107a6565b500290565b6000826107f857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561080f57600080fd5b8151801515811461054957600080fd5b600082821015610831576108316107a6565b500390565b600181815b80851115610871578160001904821115610857576108576107a6565b8085161561086457918102915b93841c939080029061083b565b509250929050565b600082610888575060016104e9565b81610895575060006104e9565b81600181146108ab57600281146108b5576108d1565b60019150506104e9565b60ff8411156108c6576108c66107a6565b50506001821b6104e9565b5060208310610133831016604e8410600b84101617156108f4575081810a6104e9565b6108fe8383610836565b8060001904821115610912576109126107a6565b029392505050565b6000610549838361087956fea2646970667358221220b4e710131c996d6a0b6e0ccda11d178d1a6727634e7f2f60803c17405be2846e64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 19892,
        "contract": "contracts/mocks/MockUniswapRouter.sol:MockUniswapRouter",
        "label": "outputBps",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}