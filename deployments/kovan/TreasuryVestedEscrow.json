{
  "address": "0x6447e627E760d73c73fA8351beD4021f6ce18662",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startafter_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration_",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canDisable_",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "fundAdmin_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "Fund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disabled",
          "type": "bool"
        }
      ],
      "name": "ToggleDisable",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canDisable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cliffAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableCanDisable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "disabledAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startAt",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_recipient",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amount",
          "type": "uint256[]"
        }
      ],
      "name": "fund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_recipient",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amount",
          "type": "uint256[]"
        }
      ],
      "name": "fund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cliffDuration",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_recipient",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amount",
          "type": "uint256[]"
        }
      ],
      "name": "fund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "initialLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialLockedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "lockedOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "members",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fundadmin",
          "type": "address"
        }
      ],
      "name": "setFundAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startAfter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "startedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "toggle_disable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unallocatedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "vestedOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x963fd839d4d69083a043e34841e9b6726869b9fa245eccaebe394a7faf333cc9",
  "receipt": {
    "to": null,
    "from": "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0",
    "contractAddress": "0x6447e627E760d73c73fA8351beD4021f6ce18662",
    "transactionIndex": 0,
    "gasUsed": "1313268",
    "logsBloom": "0x
    "blockHash": "0x879dd4674bfe061e404730bea1a4f1404ab733ffef26f6a21fbf434695e2cdb4",
    "transactionHash": "0x963fd839d4d69083a043e34841e9b6726869b9fa245eccaebe394a7faf333cc9",
    "logs": [],
    "blockNumber": 29181147,
    "cumulativeGasUsed": "1313268",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x35bbc626e88551DB4989bBe4fF25a97a4Fd9182D",
    1641769593,
    157680000,
    false,
    "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0"
  ],
  "solcInputHash": "0dc3178e7c5edfe1ad1004a8f7a23d28",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startafter_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canDisable_\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"fundAdmin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Fund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"name\":\"ToggleDisable\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canDisable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cliffAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableCanDisable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disabledAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startAt\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipient\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipient\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipient\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialLockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"lockedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundadmin\",\"type\":\"address\"}],\"name\":\"setFundAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"startedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"toggle_disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unallocatedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"vestedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dao/CaskVestedEscrow.sol\":\"CaskVestedEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/dao/CaskVestedEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\nUpdated Convex VestedEscrow\\nfound at https://github.com/convex-eth/platform/blob/main/contracts/contracts/VestedEscrow.sol\\n\\nChanges:\\n- update to solidity 0.8\\n- added back disable feature\\n- remove staking\\n- implement per address vesting start time\\n- implemented cliff\\n*/\\n\\nimport \\\"../utils/MathUtil.sol\\\";\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport '@openzeppelin/contracts/utils/Address.sol';\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n\\ncontract CaskVestedEscrow is ReentrancyGuard{\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public rewardToken;\\n    address public admin;\\n    address public fundAdmin;\\n\\n    uint256 public startAfter;\\n    uint256 public duration;\\n\\n    uint256 public initialLockedSupply;\\n    uint256 public unallocatedSupply;\\n\\n    mapping(address => uint256) public startedAt;\\n    mapping(address => uint256) public cliffAt;\\n    mapping(address => uint256) public initialLocked;\\n    mapping(address => uint256) public totalClaimed;\\n\\n    bool public canDisable;\\n    mapping(address => uint256) public disabledAt;\\n\\n    address[] public members;\\n\\n    event Fund(address indexed recipient, uint256 reward);\\n    event Claim(address indexed user, uint256 amount);\\n    event ToggleDisable(address recipient, bool disabled);\\n\\n    constructor(\\n        address rewardToken_,\\n        uint256 startafter_,\\n        uint256 duration_,\\n        bool canDisable_,\\n        address fundAdmin_\\n    ) public {\\n        require(startafter_ >= block.timestamp,\\\"start must be future\\\");\\n        require(duration_ > 0,\\\"duration must be greater\\\");\\n\\n        rewardToken = IERC20(rewardToken_);\\n        startAfter = startafter_;\\n        duration = duration_;\\n        canDisable = canDisable_;\\n        admin = msg.sender;\\n        fundAdmin = fundAdmin_;\\n    }\\n\\n    function setAdmin(address _admin) external {\\n        require(msg.sender == admin, \\\"!auth\\\");\\n        admin = _admin;\\n    }\\n\\n    function setFundAdmin(address _fundadmin) external {\\n        require(msg.sender == admin, \\\"!auth\\\");\\n        fundAdmin = _fundadmin;\\n    }\\n\\n    function addTokens(uint256 _amount) external returns(bool){\\n        require(msg.sender == admin, \\\"!auth\\\");\\n\\n        rewardToken.safeTransferFrom(msg.sender, address(this), _amount);\\n        unallocatedSupply = unallocatedSupply + _amount;\\n        return true;\\n    }\\n\\n    function fund(\\n        uint256 _startAt,\\n        uint256 _cliffDuration,\\n        address[] calldata _recipient,\\n        uint256[] calldata _amount\\n    ) external nonReentrant returns(bool){\\n        return _fund(_startAt, _cliffDuration, _recipient, _amount);\\n    }\\n\\n    function fund(\\n        uint256 _startAt,\\n        address[] calldata _recipient,\\n        uint256[] calldata _amount\\n    ) external nonReentrant returns(bool){\\n        return _fund(_startAt, 0, _recipient, _amount);\\n    }\\n\\n    function fund(\\n        address[] calldata _recipient,\\n        uint256[] calldata _amount\\n    ) external nonReentrant returns(bool){\\n        return _fund(startAfter, 0, _recipient, _amount);\\n    }\\n\\n    function _fund(\\n        uint256 _startAt,\\n        uint256 _cliffDuration,\\n        address[] calldata _recipient,\\n        uint256[] calldata _amount\\n    ) internal returns(bool){\\n        require(msg.sender == fundAdmin || msg.sender == admin, \\\"!auth\\\");\\n\\n        // startAt for this new batch is not allowed to start\\n        // before the global escrow startAfter date\\n        uint256 startAt = _startAt;\\n        if (startAt < startAfter) {\\n            startAt = startAfter;\\n        }\\n\\n        uint256 totalAmount = 0;\\n        for(uint256 i = 0; i < _recipient.length; i++){\\n            uint256 amount = _amount[i];\\n            // can only set startedAt and cliffDuration on first funding\\n            if (startedAt[_recipient[i]] == 0){\\n                members.push(_recipient[i]);\\n                startedAt[_recipient[i]] = startAt;\\n                cliffAt[_recipient[i]] = startAt + _cliffDuration;\\n            }\\n            initialLocked[_recipient[i]] = initialLocked[_recipient[i]] + amount;\\n            totalAmount = totalAmount + amount;\\n            emit Fund(_recipient[i],amount);\\n        }\\n\\n        require(totalAmount <= unallocatedSupply, \\\"!balance\\\");\\n\\n        initialLockedSupply = initialLockedSupply + totalAmount;\\n        unallocatedSupply = unallocatedSupply - totalAmount;\\n        return true;\\n    }\\n\\n    function toggle_disable(address _recipient) external {\\n        require(msg.sender == admin, \\\"!auth\\\");\\n        require(canDisable, \\\"!canDisable\\\");\\n\\n        bool isEnabled = disabledAt[_recipient] == 0;\\n        if (isEnabled) {\\n            disabledAt[_recipient] = block.timestamp;\\n        } else {\\n            disabledAt[_recipient] = 0;\\n        }\\n\\n        emit ToggleDisable(_recipient, isEnabled);\\n    }\\n\\n    function disableCanDisable() external {\\n        require(msg.sender == admin, \\\"!auth\\\");\\n        canDisable = false;\\n    }\\n\\n    function _totalVestedOf(address _recipient) internal view returns(uint256){\\n        uint256 startTime = startedAt[_recipient];\\n        uint256 endTime = disabledAt[_recipient];\\n        if (endTime == 0) {\\n            endTime = block.timestamp;\\n        }\\n        if(endTime < startTime){ // not started yet\\n            return 0;\\n        }\\n        if (cliffAt[_recipient] > endTime){ // cliff end not happened yet\\n            return 0;\\n        }\\n        uint256 locked = initialLocked[_recipient];\\n        uint256 elapsed = endTime - startTime;\\n        uint256 total = MathUtil.min(locked * elapsed / duration, locked );\\n        return total;\\n    }\\n\\n    function _totalVested() internal view returns(uint256){\\n        if(block.timestamp < startAfter){\\n            return 0;\\n        }\\n        uint256 total = 0;\\n        for (uint256 i = 0; i < members.length; i++) {\\n            total = total + _totalVestedOf(members[i]);\\n        }\\n        return total;\\n    }\\n\\n    function vestedSupply() external view returns(uint256){\\n        return _totalVested();\\n    }\\n\\n    function lockedSupply() external view returns(uint256){\\n        return initialLockedSupply - _totalVested();\\n    }\\n\\n    function vestedOf(address _recipient) external view returns(uint256){\\n        return _totalVestedOf(_recipient);\\n    }\\n\\n    function balanceOf(address _recipient) external view returns(uint256){\\n        return _totalVestedOf(_recipient) - totalClaimed[_recipient];\\n    }\\n\\n    function lockedOf(address _recipient) external view returns(uint256){\\n        return initialLocked[_recipient] - _totalVestedOf(_recipient);\\n    }\\n\\n    function claim(address _recipient) public nonReentrant{\\n        uint256 vested = _totalVestedOf(_recipient);\\n        uint256 claimable = vested - totalClaimed[_recipient];\\n\\n        totalClaimed[_recipient] = totalClaimed[_recipient] + claimable;\\n        rewardToken.safeTransfer(_recipient, claimable);\\n\\n        emit Claim(msg.sender, claimable);\\n    }\\n\\n    function claim() external{\\n        claim(msg.sender);\\n    }\\n\\n}\",\"keccak256\":\"0xd8929ad00df680f712c0a557e6700ed826a35cad625950e2feab7eb98bf24c2a\",\"license\":\"MIT\"},\"contracts/utils/MathUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUtil {\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\",\"keccak256\":\"0x5632f5611657b7ba551b0b14067e9601e6592f5f4869ecbc1e4de755aff2e078\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80639447710411610104578063c6ed8990116100a2578063ef5d9ae811610071578063ef5d9ae8146103c6578063f63d6b15146103e6578063f7c618c1146103f9578063f851a4401461040c57600080fd5b8063c6ed89901461039a578063ca5c7b91146103ad578063d9844dc0146103b5578063e39c4a88146103bd57600080fd5b8063a96d1edc116100de578063a96d1edc1461034b578063aa04ae781461035e578063aab035b714610367578063b1e56f6b1461038757600080fd5b806394477104146103125780639c45658314610325578063a5f1e2821461033857600080fd5b80635c5d070811610171578063704b6c021161014b578063704b6c02146102c357806370a08231146102d65780637664d067146102e95780637d086b291461030957600080fd5b80635c5d0708146102705780635c998cc4146102785780635daf08ca1461029857600080fd5b80631ef92578116101ad5780631ef925781461022557806336fc59c7146102425780634e71d92d146102555780635c1b73741461025d57600080fd5b8063099d695f146101d45780630fb5a6b4146102075780631e83409a14610210575b600080fd5b6101f46101e236600461105e565b600a6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101f460055481565b61022361021e36600461105e565b61041f565b005b600c546102329060ff1681565b60405190151581526020016101fe565b61022361025036600461105e565b610514565b61022361061f565b61023261026b3660046110d3565b61062a565b610223610675565b6101f461028636600461105e565b600d6020526000908152604090205481565b6102ab6102a636600461114d565b6106ab565b6040516001600160a01b0390911681526020016101fe565b6102236102d136600461105e565b6106d5565b6101f46102e436600461105e565b610721565b6101f46102f736600461105e565b60096020526000908152604090205481565b6101f460065481565b6101f461032036600461105e565b610753565b6003546102ab906001600160a01b031681565b6101f461034636600461105e565b61075e565b61022361035936600461105e565b61078c565b6101f460075481565b6101f461037536600461105e565b60086020526000908152604090205481565b610232610395366004611166565b6107d8565b6102326103a836600461114d565b610822565b6101f4610880565b6101f461089c565b6101f460045481565b6101f46103d436600461105e565b600b6020526000908152604090205481565b6102326103f43660046111d2565b6108a6565b6001546102ab906001600160a01b031681565b6002546102ab906001600160a01b031681565b6002600054141561044b5760405162461bcd60e51b815260040161044290611255565b60405180910390fd5b6002600090815561045b826108ee565b6001600160a01b0383166000908152600b60205260408120549192509061048290836112a2565b6001600160a01b0384166000908152600b60205260409020549091506104a99082906112b9565b6001600160a01b038085166000908152600b60205260409020919091556001546104d5911684836109ab565b60405181815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a25050600160005550565b6002546001600160a01b0316331461053e5760405162461bcd60e51b8152600401610442906112d1565b600c5460ff1661057e5760405162461bcd60e51b815260206004820152600b60248201526a2163616e44697361626c6560a81b6044820152606401610442565b6001600160a01b0381166000908152600d60205260409020541580156105be576001600160a01b0382166000908152600d602052604090204290556105d8565b6001600160a01b0382166000908152600d60205260408120555b604080516001600160a01b038416815282151560208201527fcc8442d1b68aaf1cdb1da2b3d9ebf3daad586d3404166b75d744a8b5092cefad910160405180910390a15050565b6106283361041f565b565b60006002600054141561064f5760405162461bcd60e51b815260040161044290611255565b600260008190555061066686600087878787610a13565b60016000559695505050505050565b6002546001600160a01b0316331461069f5760405162461bcd60e51b8152600401610442906112d1565b600c805460ff19169055565b600e81815481106106bb57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b031633146106ff5760405162461bcd60e51b8152600401610442906112d1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600b6020526040812054610743836108ee565b61074d91906112a2565b92915050565b600061074d826108ee565b6000610769826108ee565b6001600160a01b0383166000908152600a602052604090205461074d91906112a2565b6002546001600160a01b031633146107b65760405162461bcd60e51b8152600401610442906112d1565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000600260005414156107fd5760405162461bcd60e51b815260040161044290611255565b600260009081556004546108149187878787610a13565b600160005595945050505050565b6002546000906001600160a01b0316331461084f5760405162461bcd60e51b8152600401610442906112d1565b600154610867906001600160a01b0316333085610d5a565b8160075461087591906112b9565b600755506001919050565b600061088a610d98565b60065461089791906112a2565b905090565b6000610897610d98565b6000600260005414156108cb5760405162461bcd60e51b815260040161044290611255565b60026000556108de878787878787610a13565b6001600055979650505050505050565b6001600160a01b038116600090815260086020908152604080832054600d9092528220548061091a5750425b8181101561092c575060009392505050565b6001600160a01b038416600090815260096020526040902054811015610956575060009392505050565b6001600160a01b0384166000908152600a60205260408120549061097a84846112a2565b905060006109a0600554838561099091906112f0565b61099a919061130f565b84610e0c565b979650505050505050565b6040516001600160a01b038316602482015260448101829052610a0e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e24565b505050565b6003546000906001600160a01b0316331480610a3957506002546001600160a01b031633145b610a555760405162461bcd60e51b8152600401610442906112d1565b6004548790811015610a6657506004545b6000805b86811015610ceb576000868683818110610a8657610a86611331565b905060200201359050600860008a8a85818110610aa557610aa5611331565b9050602002016020810190610aba919061105e565b6001600160a01b03168152602081019190915260400160002054610bc757600e898984818110610aec57610aec611331565b9050602002016020810190610b01919061105e565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b039290921691909117905584906008908b8b86818110610b4857610b48611331565b9050602002016020810190610b5d919061105e565b6001600160a01b03168152602081019190915260400160002055610b818a856112b9565b600960008b8b86818110610b9757610b97611331565b9050602002016020810190610bac919061105e565b6001600160a01b031681526020810191909152604001600020555b80600a60008b8b86818110610bde57610bde611331565b9050602002016020810190610bf3919061105e565b6001600160a01b03166001600160a01b0316815260200190815260200160002054610c1e91906112b9565b600a60008b8b86818110610c3457610c34611331565b9050602002016020810190610c49919061105e565b6001600160a01b03168152602081019190915260400160002055610c6d81846112b9565b9250888883818110610c8157610c81611331565b9050602002016020810190610c96919061105e565b6001600160a01b03167fda8220a878ff7a89474ccffdaa31ea1ed1ffbb0207d5051afccc4fbaf81f9bcd82604051610cd091815260200190565b60405180910390a25080610ce381611347565b915050610a6a565b50600754811115610d295760405162461bcd60e51b81526020600482015260086024820152672162616c616e636560c01b6044820152606401610442565b80600654610d3791906112b9565b600655600754610d489082906112a2565b60075550600198975050505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610d929085906323b872dd60e01b906084016109d7565b50505050565b6000600454421015610daa5750600090565b6000805b600e54811015610e0657610de8600e8281548110610dce57610dce611331565b6000918252602090912001546001600160a01b03166108ee565b610df290836112b9565b915080610dfe81611347565b915050610dae565b50919050565b6000818310610e1b5781610e1d565b825b9392505050565b6000610e79826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ef69092919063ffffffff16565b805190915015610a0e5780806020019051810190610e979190611362565b610a0e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610442565b6060610f058484600085610f0d565b949350505050565b606082471015610f6e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610442565b843b610fbc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610442565b600080866001600160a01b03168587604051610fd891906113b0565b60006040518083038185875af1925050503d8060008114611015576040519150601f19603f3d011682016040523d82523d6000602084013e61101a565b606091505b50915091506109a082828660608315611034575081610e1d565b8251156110445782518084602001fd5b8160405162461bcd60e51b815260040161044291906113cc565b60006020828403121561107057600080fd5b81356001600160a01b0381168114610e1d57600080fd5b60008083601f84011261109957600080fd5b50813567ffffffffffffffff8111156110b157600080fd5b6020830191508360208260051b85010111156110cc57600080fd5b9250929050565b6000806000806000606086880312156110eb57600080fd5b85359450602086013567ffffffffffffffff8082111561110a57600080fd5b61111689838a01611087565b9096509450604088013591508082111561112f57600080fd5b5061113c88828901611087565b969995985093965092949392505050565b60006020828403121561115f57600080fd5b5035919050565b6000806000806040858703121561117c57600080fd5b843567ffffffffffffffff8082111561119457600080fd5b6111a088838901611087565b909650945060208701359150808211156111b957600080fd5b506111c687828801611087565b95989497509550505050565b600080600080600080608087890312156111eb57600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561121157600080fd5b61121d8a838b01611087565b9096509450606089013591508082111561123657600080fd5b5061124389828a01611087565b979a9699509497509295939492505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156112b4576112b461128c565b500390565b600082198211156112cc576112cc61128c565b500190565b602080825260059082015264042c2eae8d60db1b604082015260600190565b600081600019048311821515161561130a5761130a61128c565b500290565b60008261132c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561135b5761135b61128c565b5060010190565b60006020828403121561137457600080fd5b81518015158114610e1d57600080fd5b60005b8381101561139f578181015183820152602001611387565b83811115610d925750506000910152565b600082516113c2818460208701611384565b9190910192915050565b60208152600082518060208401526113eb816040850160208701611384565b601f01601f1916919091016040019291505056fea2646970667358221220a9d62dbd045037324ae48794456e315992ac6778a3939fbeb1b475c8569a932364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2915,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 5664,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "rewardToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)3568"
      },
      {
        "astId": 5666,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 5668,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "fundAdmin",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 5670,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "startAfter",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5672,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "duration",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 5674,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "initialLockedSupply",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5676,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "unallocatedSupply",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 5680,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "startedAt",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5684,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "cliffAt",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5688,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "initialLocked",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5692,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "totalClaimed",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5694,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "canDisable",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5698,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "disabledAt",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5701,
        "contract": "contracts/dao/CaskVestedEscrow.sol:CaskVestedEscrow",
        "label": "members",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)3568": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}