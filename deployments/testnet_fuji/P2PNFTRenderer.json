{
  "address": "0x9Ed6df33638ED66E6e0F78147C22d0027Cc7E864",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_baseAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ensReverseRecords",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "baseAsset",
      "outputs": [
        {
          "internalType": "contract IERC20Metadata",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ensReverseRecords",
      "outputs": [
        {
          "internalType": "contract IReverseRecords",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caskP2P",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xca932934c055305a77cd90c2560a3234333a4467c7fa8e511f13b16871cfc095",
  "receipt": {
    "to": null,
    "from": "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0",
    "contractAddress": "0x9Ed6df33638ED66E6e0F78147C22d0027Cc7E864",
    "transactionIndex": 1,
    "gasUsed": "4312632",
    "logsBloom": "0x
    "blockHash": "0x240a60d84f5e4c51b975ef0eab165187c679ae096c373996c9ba90ecd8b0d441",
    "transactionHash": "0xca932934c055305a77cd90c2560a3234333a4467c7fa8e511f13b16871cfc095",
    "logs": [],
    "blockNumber": 19686664,
    "cumulativeGasUsed": "4383600",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x73F95e25EbEb2Cf013632eF4D8fa1DB6C0785B4B",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 2,
  "solcInputHash": "5b738659ed4a2de1a437949986a4a015",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ensReverseRecords\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ensReverseRecords\",\"outputs\":[{\"internalType\":\"contract IReverseRecords\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caskP2P\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/P2PNFTRenderer.sol\":\"P2PNFTRenderer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"contracts/interfaces/ICaskP2P.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ICaskP2P {\\n\\n    enum P2PStatus {\\n        None,\\n        Active,\\n        Paused,\\n        Canceled,\\n        Complete\\n    }\\n\\n    enum ManagerCommand {\\n        None,\\n        Cancel,\\n        Skip,\\n        Pause\\n    }\\n\\n    struct P2P {\\n        address user;\\n        address to;\\n        uint256 amount;\\n        uint256 totalAmount;\\n        uint256 currentAmount;\\n        uint256 numPayments;\\n        uint256 numSkips;\\n        uint32 period;\\n        uint32 createdAt;\\n        uint32 processAt;\\n        P2PStatus status;\\n        uint256 currentFees;\\n    }\\n\\n    function createP2P(\\n        address _to,\\n        uint256 _amount,\\n        uint256 _totalAmount,\\n        uint32 _period\\n    ) external returns(bytes32);\\n\\n    function getP2P(bytes32 _p2pId) external view returns (P2P memory);\\n\\n    function getUserP2P(address _user, uint256 _idx) external view returns (bytes32);\\n\\n    function getUserP2PCount(address _user) external view returns (uint256);\\n\\n    function cancelP2P(bytes32 _p2pId) external;\\n\\n    function pauseP2P(bytes32 _p2pId) external;\\n\\n    function resumeP2P(bytes32 _p2pId) external;\\n\\n    function managerCommand(bytes32 _p2pId, ManagerCommand _command) external;\\n\\n    function managerProcessed(bytes32 _p2pId, uint256 amount, uint256 _fee) external;\\n\\n\\n    event P2PCreated(bytes32 indexed p2pId, address indexed user, address indexed to,\\n        uint256 amount, uint256 totalAmount, uint32 period);\\n\\n    event P2PPaused(bytes32 indexed p2pId, address indexed user);\\n\\n    event P2PResumed(bytes32 indexed p2pId, address indexed user);\\n\\n    event P2PSkipped(bytes32 indexed p2pId, address indexed user);\\n\\n    event P2PProcessed(bytes32 indexed p2pId, address indexed user, uint256 amount, uint256 fee);\\n\\n    event P2PCanceled(bytes32 indexed p2pId, address indexed user);\\n\\n    event P2PCompleted(bytes32 indexed p2pId, address indexed user);\\n}\",\"keccak256\":\"0x4adb8eec5d89f9a9b9d99824b998f928141cab3d01f2526184ad040e53a47695\",\"license\":\"MIT\"},\"contracts/interfaces/INFTRenderer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface INFTRenderer {\\n\\n    function tokenURI(address _caskDCA, uint256 _tokenId) external view returns (string memory);\\n\\n}\\n\",\"keccak256\":\"0x043441fa16a705536f6aa43827c7bd10e011f1a788a3d4873b475733b04552db\",\"license\":\"MIT\"},\"contracts/p2p/P2PNFTRenderer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/ICaskP2P.sol\\\";\\nimport \\\"../interfaces/INFTRenderer.sol\\\";\\nimport \\\"../utils/DescriptorUtils.sol\\\";\\nimport \\\"../utils/base64.sol\\\";\\n\\ninterface IReverseRecords {\\n    function getNames(address[] calldata addresses)\\n    external\\n    view\\n    returns (string[] memory r);\\n}\\n\\ncontract P2PNFTRenderer is INFTRenderer {\\n\\n    IERC20Metadata public baseAsset;\\n    IReverseRecords public ensReverseRecords;\\n\\n    constructor(address _baseAsset, address _ensReverseRecords) {\\n        baseAsset = IERC20Metadata(_baseAsset);\\n        require(baseAsset.decimals() > 0, \\\"!INVALID_BASE_ASSET\\\");\\n        ensReverseRecords = IReverseRecords(_ensReverseRecords);\\n    }\\n\\n    function tokenURI(address _caskP2P, uint256 _tokenId) external override view returns (string memory) {\\n        ICaskP2P.P2P memory p2p = ICaskP2P(_caskP2P).getP2P(bytes32(_tokenId));\\n        require(p2p.user != address(0), \\\"!INVALID_TOKEN\\\");\\n\\n        string memory _name = _generateName(_tokenId, p2p);\\n        string memory _description = _generateDescription(_tokenId, p2p);\\n        string memory _image = Base64.encode(bytes(_generateSVG(_tokenId, p2p)));\\n        string memory _attributes = _generateAttributes(_tokenId, p2p);\\n        return\\n        string(\\n            abi.encodePacked(\\n                'data:application/json;base64,',\\n                Base64.encode(\\n                    bytes(\\n                        abi.encodePacked('{\\\"name\\\":\\\"', _name, '\\\", \\\"description\\\":\\\"', _description, '\\\", \\\"attributes\\\": ', _attributes, ', \\\"image\\\": \\\"data:image/svg+xml;base64,', _image, '\\\"}')\\n                    )\\n                )\\n            )\\n        );\\n    }\\n\\n    function _generateDescription(uint256 _tokenId, ICaskP2P.P2P memory _p2p) private view returns (string memory) {\\n        uint8 fromDecimals = baseAsset.decimals();\\n        string memory fromSymbol = baseAsset.symbol();\\n\\n        string memory _part1 = string(\\n            abi.encodePacked(\\n                'This NFT represents a P2P position in Cask Protocol, where ',\\n                _resolveAddress(_p2p.user),\\n                ' is sending ',\\n                _amountToReadable(_p2p.amount, fromDecimals, fromSymbol),\\n                ' to ',\\n                _resolveAddress(_p2p.to),\\n                '.\\\\\\\\n\\\\\\\\n'\\n            )\\n        );\\n        string memory _part2 = string(\\n            abi.encodePacked(\\n                'From Address: ',\\n                Strings.toHexString(uint160(_p2p.user), 20),\\n                '\\\\\\\\nTo Address: ',\\n                Strings.toHexString(uint160(_p2p.to), 20),\\n                '\\\\\\\\nInterval: ',\\n                _swapPeriodHuman(_p2p.period),\\n                '\\\\\\\\n'\\n            )\\n        );\\n        return string(abi.encodePacked(_part1, _part2));\\n    }\\n\\n    function _generateName(uint256 _tokenId, ICaskP2P.P2P memory _p2p) private pure returns (string memory) {\\n        return string(abi.encodePacked('Cask Protocol P2P - ', _swapPeriodHuman(_p2p.period)));\\n    }\\n\\n    function _generateStatus(uint256 _tokenId, ICaskP2P.P2P memory _p2p) private pure returns (string memory) {\\n        if (_p2p.status == ICaskP2P.P2PStatus.Active) return 'Active';\\n        if (_p2p.status == ICaskP2P.P2PStatus.Paused) return 'Paused';\\n        if (_p2p.status == ICaskP2P.P2PStatus.Canceled) return 'Canceled';\\n        if (_p2p.status == ICaskP2P.P2PStatus.Complete) return 'Complete';\\n        return 'Unknown';\\n    }\\n\\n    function _generateAttributes(uint256 _tokenId, ICaskP2P.P2P memory _p2p) private view returns (string memory) {\\n        uint8 fromDecimals = baseAsset.decimals();\\n        string memory fromSymbol = baseAsset.symbol();\\n\\n        string memory _part1 = string(abi.encodePacked(\\n                '[{\\\"trait_type\\\": \\\"Status\\\", \\\"value\\\": \\\"',_generateStatus(_tokenId, _p2p),'\\\"},',\\n                '{\\\"trait_type\\\": \\\"Period\\\", \\\"value\\\": \\\"',_swapPeriodHuman(_p2p.period),'\\\"},',\\n                '{\\\"trait_type\\\": \\\"Current Amount\\\", \\\"display_type\\\": \\\"number\\\", \\\"value\\\": ',_amountToReadableNoSym(_p2p.currentAmount, fromDecimals),'},',\\n                '{\\\"trait_type\\\": \\\"Total Amount\\\", \\\"display_type\\\": \\\"number\\\", \\\"value\\\": ',_p2p.totalAmount > 0 ? _amountToReadableNoSym(_p2p.totalAmount, fromDecimals) : '0' ,'},'\\n            ));\\n\\n        string memory _part2 = string(abi.encodePacked(\\n                '{\\\"trait_type\\\": \\\"Payments\\\", \\\"display_type\\\": \\\"number\\\", \\\"value\\\": ',Strings.toString(_p2p.numPayments),'},',\\n                '{\\\"trait_type\\\": \\\"From Address\\\", \\\"value\\\": \\\"',Strings.toHexString(uint160(_p2p.user), 20),'\\\"},'\\n                '{\\\"trait_type\\\": \\\"To Address\\\", \\\"value\\\": \\\"',Strings.toHexString(uint160(_p2p.to), 20),'\\\"},'\\n                '{\\\"trait_type\\\": \\\"Amount\\\", \\\"display_type\\\": \\\"number\\\", \\\"value\\\": ',_amountToReadableNoSym(_p2p.amount, fromDecimals),'}]'\\n        ));\\n\\n        return string(abi.encodePacked(_part1, _part2));\\n    }\\n\\n    function _generateSVG(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal view returns (string memory) {\\n        return\\n        string(\\n            abi.encodePacked(\\n                '<svg id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 290 500.62\\\">',\\n                _generateSVGDefs(_tokenId, _p2p),\\n                _generateSVGBackground(_tokenId, _p2p),\\n                _generateSVGTextAnimation(_tokenId, _p2p),\\n                _generateSVGHeader(_tokenId, _p2p),\\n                _generateSVGAddresses(_tokenId, _p2p),\\n                _generateSVGStatus(_tokenId, _p2p),\\n                '<rect x=\\\"27\\\" y=\\\"200.76\\\" width=\\\"233.13\\\" height=\\\".75\\\" style=\\\"fill:#fff;\\\"/>',\\n                _generateSVGData(_tokenId, _p2p),\\n                '<rect x=\\\"27\\\" y=\\\"415.45\\\" width=\\\"233.13\\\" height=\\\".75\\\" style=\\\"fill:#fff;\\\"/>',\\n                _generateSVGLogo(_tokenId, _p2p),\\n                '</svg>'\\n            )\\n        );\\n    }\\n\\n    function _generateSVGDefs(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal pure returns (string memory) {\\n        return\\n        string(\\n            abi.encodePacked('<defs><linearGradient id=\\\"linear-gradient\\\" x1=\\\"145\\\" y1=\\\"503.36\\\" x2=\\\"145\\\" y2=\\\"2.74\\\" gradientTransform=\\\"translate(0 503.36) scale(1 -1)\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop offset=\\\".17\\\" stop-color=\\\"#271b3f\\\"/><stop offset=\\\".25\\\" stop-color=\\\"#271b3f\\\"/><stop offset=\\\".31\\\" stop-color=\\\"#271b3f\\\"/><stop offset=\\\".58\\\" stop-color=\\\"#644499\\\"/><stop offset=\\\".73\\\" stop-color=\\\"#8258c4\\\"/><stop offset=\\\".76\\\" stop-color=\\\"#8258c4\\\"/><stop offset=\\\".82\\\" stop-color=\\\"#654499\\\"/><stop offset=\\\".89\\\" stop-color=\\\"#432e68\\\"/><stop offset=\\\".94\\\" stop-color=\\\"#2e204a\\\"/><stop offset=\\\".97\\\" stop-color=\\\"#271b3f\\\"/></linearGradient></defs>')\\n        );\\n    }\\n\\n    function _generateSVGBackground(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal pure returns (string memory) {\\n        return\\n        string(\\n            abi.encodePacked('<path d=\\\"m290,466.37c0,18.84-17.2,34.25-38.22,34.25H38.22c-21.02,0-38.22-15.41-38.22-34.25V34.25C0,15.41,17.2,0,38.22,0h213.55c21.02,0,38.22,15.41,38.22,34.25v432.11h0Z\\\" style=\\\"fill:url(#linear-gradient);\\\"/><path id=\\\"frame-path\\\" d=\\\"m255.27,484.32H33.85c-10.42,0-18.9-8.4-18.9-18.73V33.69c0-10.33,8.48-18.73,18.9-18.73h221.42c10.42,0,18.9,8.4,18.9,18.73v431.9c0,10.33-8.48,18.73-18.9,18.73ZM33.85,15.7c-10.01,0-18.15,8.07-18.15,17.98v431.9c0,9.92,8.14,17.98,18.15,17.98h221.42c10.01,0,18.15-8.07,18.15-17.98V33.69c0-9.92-8.14-17.98-18.15-17.98H33.85Z\\\" style=\\\"fill:#fff;\\\"/>')\\n        );\\n    }\\n\\n    function _generateSVGTextAnimation(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal pure returns (string memory) {\\n        return\\n        string(\\n            abi.encodePacked(\\n                '<text text-rendering=\\\"optimizeSpeed\\\" style=\\\"fill:#fff; font-family:Verdana; font-size:8.8px; font-weight:200;\\\"><textPath startOffset=\\\"8%\\\" xlink:href=\\\"#frame-path\\\" class=\\\"st46 st38 st47\\\">From ',\\n                Strings.toHexString(uint160(_p2p.user), 20),\\n                '<animate additive=\\\"sum\\\" attributeName=\\\"startOffset\\\" from=\\\"0%\\\" to=\\\"5%\\\" dur=\\\"30s\\\" repeatCount=\\\"indefinite\\\" /></textPath></text><text text-rendering=\\\"optimizeSpeed\\\" style=\\\"fill:#fff; font-family:Verdana; font-size:8.8px; font-weight:200;\\\"><textPath startOffset=\\\"33%\\\" xlink:href=\\\"#frame-path\\\" class=\\\"st46 st38 st47\\\">To ',\\n                Strings.toHexString(uint160(_p2p.to), 20),\\n                '<animate additive=\\\"sum\\\" attributeName=\\\"startOffset\\\" from=\\\"0%\\\" to=\\\"5%\\\" dur=\\\"30s\\\" repeatCount=\\\"indefinite\\\" /></textPath></text>'\\n            ));\\n    }\\n\\n    function _generateSVGHeader(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal pure returns (string memory) {\\n        return\\n        string(\\n            abi.encodePacked(\\n                '<rect x=\\\"95.16\\\" width=\\\"104.21\\\" height=\\\"34.35\\\" style=\\\"fill:#271b3f;\\\"/><text transform=\\\"translate(145 21.42) scale(.93 1)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:15.8px; font-weight:700;\\\"><tspan x=\\\"0\\\" y=\\\"0\\\" text-anchor=\\\"middle\\\">P2P</tspan></text>'\\n            ));\\n    }\\n\\n    function _generateSVGAddresses(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal view returns (string memory) {\\n        uint8 fromDecimals = baseAsset.decimals();\\n        string memory fromSymbol = baseAsset.symbol();\\n        return\\n        string(\\n            abi.encodePacked(\\n                '<text transform=\\\"translate(145 80.6)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:22.47px; font-weight:700; isolation:isolate;\\\"><tspan x=\\\"0\\\" y=\\\"0\\\" text-anchor=\\\"middle\\\">',\\n                _resolveAddress(_p2p.user),\\n                '</tspan></text><path d=\\\"m151.07,99.34c-.64-.64-1.65-.66-2.26-.06l-3.75,3.75v-9.85c0-.74-.74-1.34-1.64-1.34-.9,0-1.64.61-1.64,1.34v9.85s-3.62-3.62-3.62-3.62c-.59-.6-1.6-.56-2.24.08-.64.64-.67,1.64-.08,2.24l5.41,5.41.36.36,1.8,1.8,2.31-2.31h0l5.39-5.39c.61-.61.58-1.62-.06-2.26Z\\\" style=\\\"fill:#fff;\\\"/><text transform=\\\"translate(145 141.37)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:22.47px; font-weight:700;\\\"><tspan x=\\\"0\\\" y=\\\"0\\\" text-anchor=\\\"middle\\\">',\\n                _resolveAddress(_p2p.to),\\n                '</tspan></text><text transform=\\\"translate(145 230.1) scale(.93 1)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:18.26px; font-weight:700;\\\"><tspan x=\\\"0\\\" y=\\\"0\\\" text-anchor=\\\"middle\\\">',\\n                _amountToReadable(_p2p.amount, fromDecimals, fromSymbol),\\n                '</tspan></text><text transform=\\\"translate(145 252.1) scale(.93 1)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:16.26px; font-weight:700;\\\"><tspan x=\\\"0\\\" y=\\\"0\\\" text-anchor=\\\"middle\\\">',\\n                _swapPeriodHuman(_p2p.period),\\n                '</tspan></text>'\\n            ));\\n    }\\n\\n    function _generateSVGStatus(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal pure returns (string memory) {\\n        if (_p2p.status == ICaskP2P.P2PStatus.Active) {\\n            return\\n            string(\\n                abi.encodePacked('<path style=\\\"fill:#34B206\\\" d=\\\"M175.1,182.2h-64c-4.9,0-9-4-9-9v0c0-4.9,4-9,9-9h64c4.9,0,9,4,9,9v0C184.1,178.1,180,182.2,175.1,182.2z\\\"/><g><text transform=\\\"matrix(1 0 0 1 124.2528 177.4143)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:12px; font-weight:700;\\\">Active</text></g>'));\\n        } else if (_p2p.status == ICaskP2P.P2PStatus.Paused) {\\n            return\\n            string(\\n                abi.encodePacked('<path style=\\\"fill:#d69e2f\\\" d=\\\"M175.1,182.2h-64c-4.9,0-9-4-9-9v0c0-4.9,4-9,9-9h64c4.9,0,9,4,9,9v0C184.1,178.1,180,182.2,175.1,182.2z\\\"/><g><text transform=\\\"matrix(1 0 0 1 124.2528 177.4143)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:12px; font-weight:700;\\\">Paused</text></g>'));\\n        } else {\\n            return '';\\n        }\\n    }\\n\\n    function _generateSVGData(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal view returns (string memory) {\\n        uint8 fromDecimals = baseAsset.decimals();\\n        string memory fromSymbol = baseAsset.symbol();\\n\\n        return\\n        string(\\n            abi.encodePacked(\\n                '<g style=\\\"isolation:isolate;\\\"><text transform=\\\"translate(42.49 300.16)\\\" style=\\\"fill:#fff; font-family:Verdana, Verdana; font-size:10px; isolation:isolate;\\\"><tspan x=\\\"0\\\" y=\\\"0\\\">Total Payments</tspan></text><text transform=\\\"translate(42.58 316.53)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:11px; font-weight:700;\\\"><tspan x=\\\"0\\\" y=\\\"1\\\">',\\n                Strings.toString(_p2p.numPayments),\\n                '</tspan></text></g><g style=\\\"isolation:isolate;\\\"><text transform=\\\"translate(177.64 300.16)\\\" style=\\\"fill:#fff; font-family:Verdana, Verdana; font-size:10px; isolation:isolate;\\\"><tspan x=\\\"0\\\" y=\\\"0\\\">Remaining</tspan></text><text transform=\\\"translate(176.45 316.53)\\\" style=\\\"fill:#fff; font-family:Verdana-Bold, Verdana; font-size:11px; font-weight:700;\\\"><tspan x=\\\"0\\\" y=\\\"1\\\">',\\n                _p2p.totalAmount > 0 ? _amountToReadable(_p2p.totalAmount - _p2p.currentAmount, fromDecimals, fromSymbol) : 'N/A',\\n                '</tspan></text></g>'\\n            ));\\n    }\\n\\n    function _generateSVGLogo(uint256 _tokenId, ICaskP2P.P2P memory _p2p) internal pure returns (string memory) {\\n        return\\n        string(\\n            abi.encodePacked(\\n                '<g><g><path d=\\\"m136.35,458.44c-2.61,0-4.75-.89-6.54-2.61-1.72-1.72-2.61-3.92-2.61-6.48s.89-4.75,2.61-6.48,3.92-2.61,6.54-2.61c1.66,0,3.21.42,4.58,1.19,1.37.83,2.44,1.9,3.09,3.27l-3.21,1.84c-.42-.83-1.01-1.49-1.78-1.96s-1.72-.71-2.73-.71c-1.55,0-2.79.53-3.8,1.55-1.01,1.01-1.55,2.32-1.55,3.86s.53,2.85,1.55,3.86,2.32,1.55,3.8,1.55c1.01,0,1.9-.24,2.73-.71s1.43-1.13,1.84-1.96l3.21,1.84c-.71,1.37-1.78,2.5-3.15,3.27-1.37.89-2.91,1.31-4.58,1.31Z\\\" style=\\\"fill:#fff;\\\"/><path d=\\\"m159.29,440.73h3.74v17.29h-3.74v-2.5c-1.43,1.96-3.45,2.91-6.06,2.91-2.38,0-4.4-.89-6.06-2.61-1.66-1.78-2.5-3.92-2.5-6.42s.83-4.69,2.5-6.48c1.66-1.72,3.68-2.61,6.06-2.61,2.61,0,4.64.95,6.06,2.91v-2.5Zm-9.39,12.6c1.01,1.07,2.32,1.55,3.92,1.55s2.85-.53,3.92-1.55c1.01-1.07,1.55-2.38,1.55-3.98s-.53-2.91-1.55-3.98-2.32-1.55-3.92-1.55-2.85.53-3.92,1.55c-1.01,1.07-1.55,2.38-1.55,3.98s.53,2.91,1.55,3.98Z\\\" style=\\\"fill:#fff;\\\"/><path d=\\\"m169.69,445.48c0,.59.3,1.01.95,1.37s1.43.59,2.32.89c.89.24,1.84.53,2.73.83s1.72.89,2.32,1.66c.65.77.95,1.72.95,2.91,0,1.66-.65,2.97-1.9,3.92-1.31.95-2.91,1.43-4.81,1.43-1.72,0-3.15-.36-4.4-1.07-1.25-.71-2.08-1.72-2.67-2.97l3.21-1.84c.59,1.66,1.9,2.5,3.86,2.5s2.91-.65,2.91-1.96c0-.53-.3-1.01-.95-1.37s-1.43-.65-2.32-.89-1.84-.53-2.73-.83c-.95-.3-1.72-.83-2.32-1.6-.65-.77-.95-1.72-.95-2.85,0-1.6.59-2.85,1.84-3.86,1.19-.95,2.73-1.43,4.52-1.43,1.43,0,2.67.3,3.8.95s1.96,1.49,2.56,2.61l-3.15,1.78c-.59-1.31-1.66-1.96-3.27-1.96-.71,0-1.31.18-1.78.48-.48.24-.71.71-.71,1.31Z\\\" style=\\\"fill:#fff;\\\"/><path d=\\\"m196.38,457.96h-4.46l-7.07-7.96v7.96h-3.74v-24.13h3.74v14.56l6.72-7.61h4.58l-7.61,8.44,7.84,8.74Z\\\" style=\\\"fill:#fff;\\\"/></g>',\\n                '<g><path d=\\\"m97.49,433.42c1.66.36,3.39.53,5.05.71,2.5.18,5.05.18,7.55.06,2.02-.12,4.1-.3,6.12-.77.89,1.07,1.55,2.32,2.14,3.57-.71.24-1.43.48-2.14.59-2.08.42-4.16.59-6.24.71-1.43.06-2.85.12-4.28.06-1.96-.06-3.86-.18-5.82-.42-1.49-.18-3.03-.48-4.46-.95.48-1.25,1.19-2.44,2.08-3.57h0Z\\\" style=\\\"fill:#fff;\\\"/><path d=\\\"m94.57,439.06c.48.06.89.3,1.37.36,2.08.48,4.28.71,6.48.83,3.63.24,7.31.18,10.99-.18,1.9-.18,3.86-.48,5.71-1.07.42,1.31.71,2.61.89,3.98-4.93,1.31-10.16,1.55-15.21,1.43-3.8-.12-7.49-.48-11.17-1.49.12-.95.3-1.84.53-2.73.12-.3.24-.71.42-1.13h0Z\\\" style=\\\"fill:#fff;\\\"/><path d=\\\"m109.49,450.77c3.57.12,7.07.53,10.52,1.43-.18,1.37-.48,2.67-.89,3.98-1.01-.3-1.96-.53-3.03-.71-2.5-.42-4.99-.53-7.49-.65-2.85-.06-5.65,0-8.5.3-1.9.18-3.74.48-5.53,1.07-.42-1.31-.71-2.61-.89-3.98,2.73-.71,5.59-1.13,8.38-1.31,2.44-.18,4.93-.18,7.43-.12h0Z\\\" style=\\\"fill:#fff;\\\"/><path d=\\\"m112.05,457.13c2.08.18,4.28.48,6.3,1.19-.59,1.31-1.25,2.5-2.14,3.57-2.56-.65-5.29-.77-7.9-.83-3.57-.06-7.31,0-10.76.83-.89-1.07-1.55-2.32-2.14-3.57,2.14-.77,4.52-1.01,6.78-1.19,3.27-.3,6.54-.3,9.87,0h0Z\\\" style=\\\"fill:#fff;\\\"/></g></g>'\\n            ));\\n    }\\n\\n    function _amountToReadable(\\n        uint256 _amount,\\n        uint8 _decimals,\\n        string memory _symbol\\n    ) private pure returns (string memory) {\\n        return string(abi.encodePacked(DescriptorUtils.fixedPointToDecimalString(_amount, _decimals), ' ', _symbol));\\n    }\\n\\n    function _amountToReadableNoSym(\\n        uint256 _amount,\\n        uint8 _decimals\\n    ) private pure returns (string memory) {\\n        return string(abi.encodePacked(DescriptorUtils.fixedPointToDecimalString(_amount, _decimals)));\\n    }\\n\\n    function _swapPeriodHuman(uint256 _period) internal pure returns (string memory) {\\n        if (_period == 1 hours) return 'Hourly';\\n        if (_period == 1 days) return 'Daily';\\n        if (_period == 1 weeks) return 'Weekly';\\n        if (_period == 1 days * (365/12)) return 'Monthly';\\n        if (_period == 1 days * (365.25/12)) return 'Monthly';\\n        if (_period == 1 days * (365/3)) return 'Quarterly';\\n        if (_period == 1 days * (365.25/3)) return 'Quarterly';\\n        if (_period == 365 days) return 'Annually';\\n        if (_period == 365.25 days) return 'Annually';\\n        return 'Periodically';\\n    }\\n\\n    function _resolveAddress(address _addr) private view returns (string memory) {\\n        if (address(ensReverseRecords) != address(0)) {\\n            string memory ens = _lookupENSName(_addr);\\n            if (bytes(ens).length > 0) {\\n                return ens;\\n            }\\n        }\\n        return _prettifyAddress(_addr);\\n    }\\n\\n    function _lookupENSName(address _addr) private view returns (string memory) {\\n        address[] memory t = new address[](1);\\n        t[0] = _addr;\\n        string[] memory results = ensReverseRecords.getNames(t);\\n        return results[0];\\n    }\\n\\n    function _prettifyAddress(address _addr) internal pure returns (string memory) {\\n        bytes16 _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n        bytes memory buffer = new bytes(14); // 0x, 4 hex chars x 2 with 4 dots in between\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        buffer[6] = \\\".\\\"; buffer[7] = \\\".\\\"; buffer[8] = \\\".\\\"; buffer[9] = \\\".\\\";\\n\\n        uint256 startVal = uint16(uint160(_addr) >> 144);\\n        for (uint256 i = 5; i > 1; i--) {\\n            buffer[i] = _HEX_SYMBOLS[startVal & 0xf];\\n            startVal >>= 4;\\n        }\\n\\n        uint256 endVal = uint16(uint160(_addr) & 0xFFFF);\\n        for (uint256 i = 5; i > 1; i--) {\\n            buffer[8 + i] = _HEX_SYMBOLS[endVal & 0xf];\\n            endVal >>= 4;\\n        }\\n\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x01fd7352462ce6a097d6686ee7de303213d630ce52e8dd8803c8437e8270c04d\",\"license\":\"MIT\"},\"contracts/utils/DescriptorUtils.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\n\\n// Based on Uniswap's NFTDescriptor\\nlibrary DescriptorUtils {\\n    using Strings for uint256;\\n    using Strings for uint32;\\n\\n    function fixedPointToDecimalString(uint256 _value, uint8 _decimals) internal pure returns (string memory) {\\n        if (_value == 0) {\\n            return '0.0000';\\n        }\\n\\n        bool _priceBelow1 = _value < 10**_decimals;\\n\\n        // get digit count\\n        uint256 _temp = _value;\\n        uint8 _digits;\\n        while (_temp != 0) {\\n            _digits++;\\n            _temp /= 10;\\n        }\\n        // don't count extra digit kept for rounding\\n        _digits = _digits - 1;\\n\\n        // address rounding\\n        (uint256 _sigfigs, bool _extraDigit) = _sigfigsRounded(_value, _digits);\\n        if (_extraDigit) {\\n            _digits++;\\n        }\\n\\n        DecimalStringParams memory _params;\\n        if (_priceBelow1) {\\n            // 7 bytes ( \\\"0.\\\" and 5 sigfigs) + leading 0's bytes\\n            _params.bufferLength = _digits >= 5 ? _decimals - _digits + 6 : _decimals + 2;\\n            _params.zerosStartIndex = 2;\\n            _params.zerosEndIndex = _decimals - _digits + 1;\\n            _params.sigfigIndex = _params.bufferLength - 1;\\n        } else if (_digits >= _decimals + 4) {\\n            // no decimal in price string\\n            _params.bufferLength = _digits - _decimals + 1;\\n            _params.zerosStartIndex = 5;\\n            _params.zerosEndIndex = _params.bufferLength - 1;\\n            _params.sigfigIndex = 4;\\n        } else {\\n            // 5 sigfigs surround decimal\\n            _params.bufferLength = 6;\\n            _params.sigfigIndex = 5;\\n            _params.decimalIndex = _digits - _decimals + 1;\\n        }\\n        _params.sigfigs = _sigfigs;\\n        _params.isLessThanOne = _priceBelow1;\\n\\n        return _generateDecimalString(_params);\\n    }\\n\\n    function addressToString(address _addr) internal pure returns (string memory) {\\n        bytes memory _s = new bytes(40);\\n        for (uint256 _i = 0; _i < 20; _i++) {\\n            bytes1 _b = bytes1(uint8(uint256(uint160(_addr)) / (2**(8 * (19 - _i)))));\\n            bytes1 _hi = bytes1(uint8(_b) / 16);\\n            bytes1 _lo = bytes1(uint8(_b) - 16 * uint8(_hi));\\n            _s[2 * _i] = _char(_hi);\\n            _s[2 * _i + 1] = _char(_lo);\\n        }\\n        return string(abi.encodePacked('0x', string(_s)));\\n    }\\n\\n    struct DecimalStringParams {\\n        // significant figures of decimal\\n        uint256 sigfigs;\\n        // length of decimal string\\n        uint8 bufferLength;\\n        // ending index for significant figures (funtion works backwards when copying sigfigs)\\n        uint8 sigfigIndex;\\n        // index of decimal place (0 if no decimal)\\n        uint8 decimalIndex;\\n        // start index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosStartIndex;\\n        // end index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosEndIndex;\\n        // true if decimal number is less than one\\n        bool isLessThanOne;\\n    }\\n\\n    function _generateDecimalString(DecimalStringParams memory _params) private pure returns (string memory) {\\n        bytes memory _buffer = new bytes(_params.bufferLength);\\n        if (_params.isLessThanOne) {\\n            _buffer[0] = '0';\\n            _buffer[1] = '.';\\n        }\\n\\n        // add leading/trailing 0's\\n        for (uint256 _zerosCursor = _params.zerosStartIndex; _zerosCursor < _params.zerosEndIndex + 1; _zerosCursor++) {\\n            _buffer[_zerosCursor] = bytes1(uint8(48));\\n        }\\n        // add sigfigs\\n        while (_params.sigfigs > 0) {\\n            if (_params.decimalIndex > 0 && _params.sigfigIndex == _params.decimalIndex) {\\n                _buffer[_params.sigfigIndex--] = '.';\\n            }\\n            uint8 _charIndex = uint8(48 + (_params.sigfigs % 10));\\n            _buffer[_params.sigfigIndex] = bytes1(_charIndex);\\n            _params.sigfigs /= 10;\\n            if (_params.sigfigs > 0) {\\n                _params.sigfigIndex--;\\n            }\\n        }\\n        return string(_buffer);\\n    }\\n\\n    function _sigfigsRounded(uint256 _value, uint8 _digits) private pure returns (uint256, bool) {\\n        bool _extraDigit;\\n        if (_digits > 5) {\\n            _value = _value / (10**(_digits - 5));\\n        }\\n        bool _roundUp = _value % 10 > 4;\\n        _value = _value / 10;\\n        if (_roundUp) {\\n            _value = _value + 1;\\n        }\\n        // 99999 -> 100000 gives an extra sigfig\\n        if (_value == 100000) {\\n            _value /= 10;\\n            _extraDigit = true;\\n        }\\n        return (_value, _extraDigit);\\n    }\\n\\n    function _char(bytes1 _b) private pure returns (bytes1) {\\n        if (uint8(_b) < 10) return bytes1(uint8(_b) + 0x30);\\n        else return bytes1(uint8(_b) + 0x57);\\n    }\\n}\",\"keccak256\":\"0x5463e3f619f08193f49dfdce47782eca17326a55c3a5208bd7b340397c861b60\",\"license\":\"GPL-2.0-or-later\"},\"contracts/utils/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides a function for encoding some bytes in base64\\nlibrary Base64 {\\n    string internal constant TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n        // set the actual output length\\n            mstore(result, encodedLen)\\n\\n        // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n        // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n        // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n        // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                dataPtr := add(dataPtr, 3)\\n\\n            // read 3 bytes\\n                let input := mload(dataPtr)\\n\\n            // write 4 characters\\n                mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr( 6, input), 0x3F)))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore(resultPtr, shl(248, mload(add(tablePtr, and(        input,  0x3F)))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n        // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n}\",\"keccak256\":\"0xa353c0515f60ec9be5e8a2bbe2502e34e0437958bc85c7cfa6728154cddf1443\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23659,
        "contract": "contracts/p2p/P2PNFTRenderer.sol:P2PNFTRenderer",
        "label": "baseAsset",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20Metadata)4344"
      },
      {
        "astId": 23662,
        "contract": "contracts/p2p/P2PNFTRenderer.sol:P2PNFTRenderer",
        "label": "ensReverseRecords",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IReverseRecords)23654"
      }
    ],
    "types": {
      "t_contract(IERC20Metadata)4344": {
        "encoding": "inplace",
        "label": "contract IERC20Metadata",
        "numberOfBytes": "20"
      },
      "t_contract(IReverseRecords)23654": {
        "encoding": "inplace",
        "label": "contract IReverseRecords",
        "numberOfBytes": "20"
      }
    }
  }
}