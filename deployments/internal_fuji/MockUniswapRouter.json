{
  "address": "0xC982Dbe66A1E1A91C442F01C54356Bc8F5C1E517",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_0tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_1tokens",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pairMaps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1dd018e620dfb19a0a904e46e79444048fd6e33d4d3054c1a0508e00c3fd641b",
  "receipt": {
    "to": null,
    "from": "0x83e50cD4123bAA60f6d6c8A83ca85Ac72e826bD0",
    "contractAddress": "0xC982Dbe66A1E1A91C442F01C54356Bc8F5C1E517",
    "transactionIndex": 2,
    "gasUsed": "652407",
    "logsBloom": "0x
    "blockHash": "0x15f9d66198828c3ba7bced1205361d600c659c5d6e0eee63c4769848eb6377ce",
    "transactionHash": "0x1dd018e620dfb19a0a904e46e79444048fd6e33d4d3054c1a0508e00c3fd641b",
    "logs": [],
    "blockNumber": 11126423,
    "cumulativeGasUsed": "997172",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "79a7f6ff9bd8a3922495b96a9b369300",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_0tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_1tokens\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pairMaps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockUniswapRouter.sol\":\"MockUniswapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/mocks/MockUniswapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ncontract MockUniswapRouter {\\n\\n    mapping(address => address) public pairMaps;\\n\\n    function initialize(\\n        address[] calldata _0tokens,\\n        address[] calldata _1tokens\\n    ) public {\\n        require(\\n            _0tokens.length == _1tokens.length,\\n            \\\"Mock token pairs should be of the same length\\\"\\n        );\\n        for (uint256 i = 0; i < _0tokens.length; i++) {\\n            pairMaps[_0tokens[i]] = _1tokens[i];\\n        }\\n    }\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory) {\\n        address tok0 = path[0];\\n        address tok1 = pairMaps[tok0];\\n        // Give 1:1\\n        uint256 amountOut = _scaleBy(amountIn, IERC20Metadata(tok1).decimals(), IERC20Metadata(tok0).decimals());\\n        require(amountOut >= amountOutMin, \\\"Slippage error\\\");\\n        require(deadline > block.timestamp);\\n\\n        IERC20Metadata(tok0).transferFrom(msg.sender, address(this), amountIn);\\n        IERC20Metadata(tok1).transfer(to, amountOut);\\n\\n        uint256[] memory amounts = new uint256[](2);\\n        amounts[0] = amountIn;\\n        amounts[1] = amountOut;\\n\\n        return amounts;\\n    }\\n\\n    function getAmountsOut(\\n        uint256 amountIn,\\n        address[] memory path\\n    ) external view returns (uint256[] memory) {\\n        address tok0 = path[0];\\n        address tok1 = pairMaps[tok0];\\n        // Give 1:1\\n        uint256 amountOut = _scaleBy(amountIn, IERC20Metadata(tok1).decimals(), IERC20Metadata(tok0).decimals());\\n\\n        uint256[] memory amounts = new uint256[](2);\\n        amounts[0] = amountIn;\\n        amounts[1] = amountOut;\\n\\n        return amounts;\\n    }\\n\\n    function _scaleBy(\\n        uint256 x,\\n        uint256 to,\\n        uint256 from\\n    ) internal pure returns (uint256) {\\n        if (to > from) {\\n            return x * (10**(to - from));\\n        } else if (to < from) {\\n            return x / (10**(from - to));\\n        } else {\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6dd433500bd413a0fb4b578c6baa6c3caede535698f3c59f7d54ee7fb65465f\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ad8806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338ed1739146100515780636655524c1461007a57806373cf25f8146100bb578063d06ca61f146100d0575b600080fd5b61006461005f3660046106ac565b6100e3565b604051610071919061071c565b60405180910390f35b6100a3610088366004610760565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610071565b6100ce6100c936600461077b565b6103ea565b005b6100646100de3660046107fd565b6104f5565b60606000858560008181106100fa576100fa6108ce565b905060200201602081019061010f9190610760565b6001600160a01b0380821660009081526020818152604080832054815163313ce56760e01b8152915195965090931693919261021e928d92869263313ce5679260048083019392829003018186803b15801561016a57600080fd5b505afa15801561017e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a291906108e4565b60ff16856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101de57600080fd5b505afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021691906108e4565b60ff166105e3565b9050888110156102665760405162461bcd60e51b815260206004820152600e60248201526d29b634b83830b3b29032b93937b960911b60448201526064015b60405180910390fd5b42851161027257600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018b90526001600160a01b038416906323b872dd90606401602060405180830381600087803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610907565b5060405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b9190610907565b506040805160028082526060820183526000926020830190803683370190505090508a816000815181106103b1576103b16108ce565b60200260200101818152505081816001815181106103d1576103d16108ce565b60209081029190910101529a9950505050505050505050565b82811461044f5760405162461bcd60e51b815260206004820152602d60248201527f4d6f636b20746f6b656e2070616972732073686f756c64206265206f6620746860448201526c0ca40e6c2daca40d8cadccee8d609b1b606482015260840161025d565b60005b838110156104ee5782828281811061046c5761046c6108ce565b90506020020160208101906104819190610760565b600080878785818110610496576104966108ce565b90506020020160208101906104ab9190610760565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055806104e68161093f565b915050610452565b5050505050565b606060008260008151811061050c5761050c6108ce565b6020908102919091018101516001600160a01b038082166000908152808452604080822054815163313ce56760e01b81529151949650909216939092610572928992869263313ce567926004808201939291829003018186803b15801561016a57600080fd5b604080516002808252606082018352929350600092909160208301908036833701905050905086816000815181106105ac576105ac6108ce565b60200260200101818152505081816001815181106105cc576105cc6108ce565b602090810291909101015293505050505b92915050565b600081831115610613576105f7828461095a565b61060290600a610a55565b61060c9085610a61565b905061063d565b8183101561063a57610625838361095a565b61063090600a610a55565b61060c9085610a80565b50825b9392505050565b60008083601f84011261065657600080fd5b50813567ffffffffffffffff81111561066e57600080fd5b6020830191508360208260051b850101111561068957600080fd5b9250929050565b80356001600160a01b03811681146106a757600080fd5b919050565b60008060008060008060a087890312156106c557600080fd5b8635955060208701359450604087013567ffffffffffffffff8111156106ea57600080fd5b6106f689828a01610644565b9095509350610709905060608801610690565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b8181101561075457835183529284019291840191600101610738565b50909695505050505050565b60006020828403121561077257600080fd5b61063d82610690565b6000806000806040858703121561079157600080fd5b843567ffffffffffffffff808211156107a957600080fd5b6107b588838901610644565b909650945060208701359150808211156107ce57600080fd5b506107db87828801610644565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561081057600080fd5b8235915060208084013567ffffffffffffffff8082111561083057600080fd5b818601915086601f83011261084457600080fd5b813581811115610856576108566107e7565b8060051b604051601f19603f8301168101818110858211171561087b5761087b6107e7565b60405291825284820192508381018501918983111561089957600080fd5b938501935b828510156108be576108af85610690565b8452938501939285019261089e565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156108f657600080fd5b815160ff8116811461063d57600080fd5b60006020828403121561091957600080fd5b8151801515811461063d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561095357610953610929565b5060010190565b60008282101561096c5761096c610929565b500390565b600181815b808511156109ac57816000190482111561099257610992610929565b8085161561099f57918102915b93841c9390800290610976565b509250929050565b6000826109c3575060016105dd565b816109d0575060006105dd565b81600181146109e657600281146109f057610a0c565b60019150506105dd565b60ff841115610a0157610a01610929565b50506001821b6105dd565b5060208310610133831016604e8410600b8410161715610a2f575081810a6105dd565b610a398383610971565b8060001904821115610a4d57610a4d610929565b029392505050565b600061063d83836109b4565b6000816000190483118215151615610a7b57610a7b610929565b500290565b600082610a9d57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122080f4c4c81528968cd80f2f0e13c735414f56464f8cba9c5cfde379119073a69764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806338ed1739146100515780636655524c1461007a57806373cf25f8146100bb578063d06ca61f146100d0575b600080fd5b61006461005f3660046106ac565b6100e3565b604051610071919061071c565b60405180910390f35b6100a3610088366004610760565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610071565b6100ce6100c936600461077b565b6103ea565b005b6100646100de3660046107fd565b6104f5565b60606000858560008181106100fa576100fa6108ce565b905060200201602081019061010f9190610760565b6001600160a01b0380821660009081526020818152604080832054815163313ce56760e01b8152915195965090931693919261021e928d92869263313ce5679260048083019392829003018186803b15801561016a57600080fd5b505afa15801561017e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a291906108e4565b60ff16856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101de57600080fd5b505afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021691906108e4565b60ff166105e3565b9050888110156102665760405162461bcd60e51b815260206004820152600e60248201526d29b634b83830b3b29032b93937b960911b60448201526064015b60405180910390fd5b42851161027257600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018b90526001600160a01b038416906323b872dd90606401602060405180830381600087803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610907565b5060405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b9190610907565b506040805160028082526060820183526000926020830190803683370190505090508a816000815181106103b1576103b16108ce565b60200260200101818152505081816001815181106103d1576103d16108ce565b60209081029190910101529a9950505050505050505050565b82811461044f5760405162461bcd60e51b815260206004820152602d60248201527f4d6f636b20746f6b656e2070616972732073686f756c64206265206f6620746860448201526c0ca40e6c2daca40d8cadccee8d609b1b606482015260840161025d565b60005b838110156104ee5782828281811061046c5761046c6108ce565b90506020020160208101906104819190610760565b600080878785818110610496576104966108ce565b90506020020160208101906104ab9190610760565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055806104e68161093f565b915050610452565b5050505050565b606060008260008151811061050c5761050c6108ce565b6020908102919091018101516001600160a01b038082166000908152808452604080822054815163313ce56760e01b81529151949650909216939092610572928992869263313ce567926004808201939291829003018186803b15801561016a57600080fd5b604080516002808252606082018352929350600092909160208301908036833701905050905086816000815181106105ac576105ac6108ce565b60200260200101818152505081816001815181106105cc576105cc6108ce565b602090810291909101015293505050505b92915050565b600081831115610613576105f7828461095a565b61060290600a610a55565b61060c9085610a61565b905061063d565b8183101561063a57610625838361095a565b61063090600a610a55565b61060c9085610a80565b50825b9392505050565b60008083601f84011261065657600080fd5b50813567ffffffffffffffff81111561066e57600080fd5b6020830191508360208260051b850101111561068957600080fd5b9250929050565b80356001600160a01b03811681146106a757600080fd5b919050565b60008060008060008060a087890312156106c557600080fd5b8635955060208701359450604087013567ffffffffffffffff8111156106ea57600080fd5b6106f689828a01610644565b9095509350610709905060608801610690565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b8181101561075457835183529284019291840191600101610738565b50909695505050505050565b60006020828403121561077257600080fd5b61063d82610690565b6000806000806040858703121561079157600080fd5b843567ffffffffffffffff808211156107a957600080fd5b6107b588838901610644565b909650945060208701359150808211156107ce57600080fd5b506107db87828801610644565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561081057600080fd5b8235915060208084013567ffffffffffffffff8082111561083057600080fd5b818601915086601f83011261084457600080fd5b813581811115610856576108566107e7565b8060051b604051601f19603f8301168101818110858211171561087b5761087b6107e7565b60405291825284820192508381018501918983111561089957600080fd5b938501935b828510156108be576108af85610690565b8452938501939285019261089e565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156108f657600080fd5b815160ff8116811461063d57600080fd5b60006020828403121561091957600080fd5b8151801515811461063d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561095357610953610929565b5060010190565b60008282101561096c5761096c610929565b500390565b600181815b808511156109ac57816000190482111561099257610992610929565b8085161561099f57918102915b93841c9390800290610976565b509250929050565b6000826109c3575060016105dd565b816109d0575060006105dd565b81600181146109e657600281146109f057610a0c565b60019150506105dd565b60ff841115610a0157610a01610929565b50506001821b6105dd565b5060208310610133831016604e8410600b8410161715610a2f575081810a6105dd565b610a398383610971565b8060001904821115610a4d57610a4d610929565b029392505050565b600061063d83836109b4565b6000816000190483118215151615610a7b57610a7b610929565b500290565b600082610a9d57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122080f4c4c81528968cd80f2f0e13c735414f56464f8cba9c5cfde379119073a69764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14231,
        "contract": "contracts/mocks/MockUniswapRouter.sol:MockUniswapRouter",
        "label": "pairMaps",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}